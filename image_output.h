/*
    Copyright 2008 David House

    This file is part of Microsight.

    Microsight is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    Microsight is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Microsight.  If not, see <http://www.gnu.org/licenses/>.
*/

#ifndef _IMAGE_OUTPUT_H
#define _IMAGE_OUTPUT_H

void OutputFrame(rgbframe *labeled, int type, char *name, string directory);

// -----===-----===-----===-----===-----===-----===-----=== //
// ===-----===-----=== Output Functions ===-----===-----=== //
// -----===-----===-----===-----===-----===-----===-----=== //

// Outputs rgbframe in varying formats depending on 'type' selection [0 - 6]
// 0: Output in All Formats
// 1: Output original frame as PPM
// 2: Output frame with regions color-coded
// 3: Output original frame with region boundaries highlighted
// 4: Output original frame with all non-object regions shaded
// 5: actCoreing Output: Color
// 6: actCoreing Output: High Contrast
void OutputFrame(rgbframe *labeled, int type, char *name, string directory){

	int m,n;
	short flag = 0;
	int val = 255;
	bool highcontrast = false;
	rgbframe output;
	output.ydim = labeled->ydim;
	output.xdim = labeled->xdim;
	string str = name;
	string str2 = labeled->name;
	string outputFile = directory;
	output.highestvalue = labeled->highestvalue;
	output.totalPixels = labeled->ydim * labeled->xdim;
	GetImagePpm(&output);

	list<cell>::iterator obj = labeled->cells.begin();
	list<cell>::iterator last_obj = labeled->cells.end();

	if(type==6){
		highcontrast=true;
		type=5;
	}

	if(type==0)
	{
		flag=1;
		type=1;
	}

	switch(type){

		// Outputs original frame as a PPM
		case 1: 	strcpy_s(labeled->name, "frame_output.ppm");
					OutputPpm(labeled);
					if(flag==0)
						break;

		// Color-codes all regions in frame based on regionID
		// Outputs colorized frame in ppm format
		case 2:		for(m=0; m<labeled->ydim; m++)
						for(n=0; n<labeled->xdim; n++){
							output.r[m][n]= (5*labeled->regionID[m][n]);
							output.g[m][n]= (3 * labeled->regionID[m][n])/4;
							output.b[m][n]= (3 * labeled->regionID[m][n])/(4*4);
							if(labeled->isBoundary[m][n] == 1){
								output.r[m][n] = 0;
								output.g[m][n] = 0;
								output.b[m][n] = 255;
						}
					}

					m = str.size();

					str.erase(m-4);
					str.append("_output.ppm");
					strcpy_s(output.name, str.c_str());
					OutputPpm(&output);

					//strcpy_s(output.name, "color_compare.ppm");
					//OutputPpm(&output);
					if(flag==0)
						break;

		// Colorizes all region boundaries
		// Outputs colorized frame in ppm format
		case 3:		for(m=0; m<labeled->ydim; m++)
						for(n=0; n<labeled->xdim; n++){
							output.r[m][n] = labeled->r[m][n];
							output.g[m][n] = labeled->g[m][n];
							output.b[m][n] = labeled->b[m][n];
							output.isBoundary[m][n] = labeled->isBoundary[m][n];
						}

					for(m=0; m<output.ydim; m++)
						for(n=0; n<output.xdim; n++)
							if(output.isBoundary[m][n]==1)
								output.b[m][n] = 255;
					

					strcpy_s(output.name, "outline_compare.ppm");
					OutputPpm(&output);
					if(flag==0)
						break;

		// Sets background region to blue for easy comparison
		// Outputs colorized frame in ppm format
		case 4:		for(m=0; m<labeled->ydim; m++)
						for(n=0; n<labeled->xdim; n++){
							output.r[m][n] = labeled->r[m][n];
							output.g[m][n] = labeled->g[m][n];
							output.b[m][n] = labeled->b[m][n];
						}

					for(m=0; m<output.ydim; m++)
						for(n=0; n<output.xdim; n++)
							if(labeled->regionID[m][n] == 0)
								output.b[m][n] = 255;

					for(m=1; m<(labeled->ydim-1); m++)
						for(n=1; n<(labeled->xdim-1); n++)
							if(labeled->isCentroid[m][n]==1)
							{
								if(verbose) printf("Centroid at %d %d\n", n, m);
								output.r[m][n]=255;
								output.g[m][n]=0;
								output.b[m][n]=0;
								output.r[m-1][n]=255;
								output.g[m-1][n]=0;
								output.b[m-1][n]=0;
								output.r[m+1][n]=255;
								output.g[m+1][n]=0;
								output.b[m+1][n]=0;
								output.r[m][n-1]=255;
								output.g[m][n-1]=0;
								output.b[m][n-1]=0;
								output.r[m][n+1]=255;
								output.g[m][n+1]=0;
								output.b[m][n+1]=0;
							}

					strcpy_s(output.name, "blue_compare.ppm");
					OutputPpm(&output);
					if(flag==0)
						break;

		// Outputs object frames with centroids
		case 5:		for(m=0; m<labeled->ydim; m++)
						for(n=0; n<labeled->xdim; n++){
							output.r[m][n] = labeled->r[m][n];
							output.g[m][n] = labeled->g[m][n];
							output.b[m][n] = labeled->b[m][n];
					}

					// Output Orientation
					obj = labeled->cells.begin();
					last_obj = labeled->cells.end();

					for( ; obj!=last_obj; ++obj)
						if(obj->circularity<0.88){
							for(int y=0; y<25; y++) {
								 int x=static_cast<int>(tan(obj->alpha)*y);
								 if(obj->centroidX+y>=0 && obj->centroidX+y<output.xdim && obj->centroidY-x>=0 && obj->centroidY-x<output.ydim){
									output.r[obj->centroidY-x][obj->centroidX+y] = 0;
									output.g[obj->centroidY-x][obj->centroidX+y] = 0;
									output.b[obj->centroidY-x][obj->centroidX+y] = 255;
								 }
								 if(obj->centroidX-y>=0 && obj->centroidX-y<output.xdim && obj->centroidY+x>=0 && obj->centroidY+x<output.ydim){
									output.r[obj->centroidY+x][obj->centroidX-y] = 0;
									output.g[obj->centroidY+x][obj->centroidX-y] = 102;
									output.b[obj->centroidY+x][obj->centroidX-y] = 102;
								 }
							  }
						}

					// Output Frame
					obj = labeled->cells.begin();
					last_obj = labeled->cells.end();
			
					for( ; obj!=last_obj; ++obj)
						for(m=obj->starty; m<obj->endy; m++)
							for(n=obj->startx; n<obj->endx; n++){

								if(m==obj->starty || m==obj->endy-1){
									//output.r[m][n]=255;
									output.r[m][n]=0;
									output.g[m][n]=255;
									output.b[m][n]=0;
								}
								  
								if(n==obj->startx || n==obj->endx-1){
									//output.r[m][n]=255;
									output.r[m][n]=0;
									output.g[m][n]=255;
									output.b[m][n]=0;
								}

							 }

					// Output Centroid
					for(m=3; m<(labeled->ydim-3); m++)
						for(n=3; n<(labeled->xdim-3); n++)
							if(labeled->isCentroid[m][n]==1)
							{
								if(verbose) printf("Centroid at %d %d\n", n, m);

								if(highcontrast){
									if(output.r[m][n]<128) output.r[m][n]=255;
									else if(output.r[m][n]>=128) output.r[m][n]=0;
									if(output.g[m][n]<128) output.g[m][n]=255;
									else if(output.g[m][n]>=128) output.g[m][n]=0;
									if(output.b[m][n]<128) output.b[m][n]=255;
									else if(output.b[m][n]>=128) output.b[m][n]=0;
									if(output.r[m-1][n]<128) output.r[m-1][n]=255;
									else if(output.r[m-1][n]>=128) output.r[m-1][n]=0;
									if(output.g[m-1][n]<128) output.g[m-1][n]=255;
									else if(output.g[m-1][n]>=128) output.g[m-1][n]=0;
									if(output.b[m-1][n]<128) output.b[m-1][n]=255;
									else if(output.b[m-1][n]>=128) output.b[m-1][n]=0;
									if(output.r[m+1][n]<128) output.r[m+1][n]=255;
									else if(output.r[m+1][n]>=128) output.r[m+1][n]=0;
									if(output.g[m+1][n]<128) output.g[m+1][n]=255;
									else if(output.g[m+1][n]>=128) output.g[m+1][n]=0;
									if(output.b[m+1][n]<128) output.b[m+1][n]=255;
									else if(output.b[m+1][n]>=128) output.b[m+1][n]=0;
									if(output.r[m][n-1]<128) output.r[m][n-1]=255;
									else if(output.r[m][n-1]>=128) output.r[m][n-1]=0;
									if(output.g[m][n-1]<128) output.g[m][n-1]=255;
									else if(output.g[m][n-1]>=128) output.g[m][n-1]=0;
									if(output.b[m][n-1]<128) output.b[m][n-1]=255;
									else if(output.b[m][n-1]>=128) output.b[m][n-1]=0;
									if(output.r[m][n+1]<128) output.r[m][n+1]=255;
									else if(output.r[m][n+1]>=128) output.r[m][n+1]=0;
									if(output.g[m][n+1]<128) output.g[m][n+1]=255;
									else if(output.g[m][n+1]>=128) output.g[m][n+1]=0;
									if(output.b[m][n+1]<128) output.b[m][n+1]=255;
									else if(output.b[m][n+1]>=128) output.b[m][n+1]=0;
									if(output.r[m-2][n]<128) output.r[m-2][n]=255;
									else if(output.r[m-2][n]>=128) output.r[m-2][n]=0;
									if(output.g[m-2][n]<128) output.g[m-2][n]=255;
									else if(output.g[m-2][n]>=128) output.g[m-2][n]=0;
									if(output.b[m-2][n]<128) output.b[m-2][n]=255;
									else if(output.b[m-2][n]>=128) output.b[m-2][n]=0;
									if(output.r[m+2][n]<128) output.r[m+2][n]=255;
									else if(output.r[m+2][n]>=128) output.r[m+2][n]=0;
									if(output.g[m+2][n]<128) output.g[m+2][n]=255;
									else if(output.g[m+2][n]>=128) output.g[m+2][n]=0;
									if(output.b[m+2][n]<128) output.b[m+2][n]=255;
									else if(output.b[m+2][n]>=128) output.b[m+2][n]=0;
									if(output.r[m][n-2]<128) output.r[m][n-2]=255;
									else if(output.r[m][n-2]>=128) output.r[m][n-2]=0;
									if(output.g[m][n-2]<128) output.g[m][n-2]=255;
									else if(output.g[m][n-2]>=128) output.g[m][n-2]=0;
									if(output.b[m][n-2]<128) output.b[m][n-2]=255;
									else if(output.b[m][n-2]>=128) output.b[m][n-2]=0;
									if(output.r[m][n+2]<128) output.r[m][n+2]=255;
									else if(output.r[m][n+2]>=128) output.r[m][n+2]=0;
									if(output.g[m][n+2]<128) output.g[m][n+2]=255;
									else if(output.g[m][n+2]>=128) output.g[m][n+2]=0;
									if(output.b[m][n+2]<128) output.b[m][n+2]=255;
									else if(output.b[m][n+2]>=128) output.b[m][n+2]=0;
									if(output.r[m-3][n]<128) output.r[m-3][n]=255;
									else if(output.r[m-3][n]>=128) output.r[m-3][n]=0;
									if(output.g[m-3][n]<128) output.g[m-3][n]=255;
									else if(output.g[m-3][n]>=128) output.g[m-3][n]=0;
									if(output.b[m-3][n]<128) output.b[m-3][n]=255;
									else if(output.b[m-3][n]>=128) output.b[m-3][n]=0;
									if(output.r[m+3][n]<128) output.r[m+3][n]=255;
									else if(output.r[m+3][n]>=128) output.r[m+3][n]=0;
									if(output.g[m+3][n]<128) output.g[m+3][n]=255;
									else if(output.g[m+3][n]>=128) output.g[m+3][n]=0;
									if(output.b[m+3][n]<128) output.b[m+3][n]=255;
									else if(output.b[m+3][n]>=128) output.b[m+3][n]=0;
									if(output.r[m][n-3]<128) output.r[m][n-3]=255;
									else if(output.r[m][n-3]>=128) output.r[m][n-3]=0;
									if(output.g[m][n-3]<128) output.g[m][n-3]=255;
									else if(output.g[m][n-3]>=128) output.g[m][n-3]=0;
									if(output.b[m][n-3]<128) output.b[m][n-3]=255;
									else if(output.b[m][n-3]>=128) output.b[m][n-3]=0;
									if(output.r[m][n+3]<128) output.r[m][n+3]=255;
									else if(output.r[m][n+3]>=128) output.r[m][n+3]=0;
									if(output.g[m][n+3]<128) output.g[m][n+3]=255;
									else if(output.g[m][n+3]>=128) output.g[m][n+3]=0;
									if(output.b[m][n+3]<128) output.b[m][n+3]=255;
									else if(output.b[m][n+3]>=128) output.b[m][n+3]=0;
									
								
									// square
									if(output.r[m-2][n+1]<128) output.r[m-2][n+1]=255;
									else if(output.r[m-2][n+1]>=128) output.r[m-2][n+1]=0;
									if(output.g[m-2][n+1]<128) output.g[m-2][n+1]=255;
									else if(output.g[m-2][n+1]>=128) output.g[m-2][n+1]=0;
									if(output.b[m-2][n+1]<128) output.b[m-2][n+1]=255;
									else if(output.b[m-2][n+1]>=128) output.b[m-2][n+1]=0;
									if(output.r[m-2][n-1]<128) output.r[m-2][n-1]=255;
									else if(output.r[m-2][n-1]>=128) output.r[m-2][n-1]=0;
									if(output.g[m-2][n-1]<128) output.g[m-2][n-1]=255;
									else if(output.g[m-2][n-1]>=128) output.g[m-2][n-1]=0;
									if(output.b[m-2][n-1]<128) output.b[m-2][n-1]=255;
									else if(output.b[m-2][n-1]>=128) output.b[m-2][n-1]=0;
									if(output.r[m-2][n+2]<128) output.r[m-2][n+2]=255;
									else if(output.r[m-2][n+2]>=128) output.r[m-2][n+2]=0;
									if(output.g[m-2][n+2]<128) output.g[m-2][n+2]=255;
									else if(output.g[m-2][n+2]>=128) output.g[m-2][n+2]=0;
									if(output.b[m-2][n+2]<128) output.b[m-2][n+2]=255;
									else if(output.b[m-2][n+2]>=128) output.b[m-2][n+2]=0;
									if(output.r[m-2][n-2]<128) output.r[m-2][n-2]=255;
									else if(output.r[m-2][n-2]>=128) output.r[m-2][n-2]=0;
									if(output.g[m-2][n-2]<128) output.g[m-2][n-2]=255;
									else if(output.g[m-2][n-2]>=128) output.g[m-2][n-2]=0;
									if(output.b[m-2][n-2]<128) output.b[m-2][n-2]=255;
									else if(output.b[m-2][n-2]>=128) output.b[m-2][n-2]=0;

									if(output.r[m+2][n+1]<128) output.r[m+2][n+1]=255;
									else if(output.r[m+2][n+1]>=128) output.r[m+2][n+1]=0;
									if(output.g[m+2][n+1]<128) output.g[m+2][n+1]=255;
									else if(output.g[m+2][n+1]>=128) output.g[m+2][n+1]=0;
									if(output.b[m+2][n+1]<128) output.b[m+2][n+1]=255;
									else if(output.b[m+2][n+1]>=128) output.b[m+2][n+1]=0;
									if(output.r[m+2][n-1]<128) output.r[m+2][n-1]=255;
									else if(output.r[m+2][n-1]>=128) output.r[m+2][n-1]=0;
									if(output.g[m+2][n-1]<128) output.g[m+2][n-1]=255;
									else if(output.g[m+2][n-1]>=128) output.g[m+2][n-1]=0;
									if(output.b[m+2][n-1]<128) output.b[m+2][n-1]=255;
									else if(output.b[m+2][n-1]>=128) output.b[m+2][n-1]=0;
									if(output.r[m+2][n+2]<128) output.r[m+2][n+2]=255;
									else if(output.r[m+2][n+2]>=128) output.r[m+2][n+2]=0;
									if(output.g[m+2][n+2]<128) output.g[m+2][n+2]=255;
									else if(output.g[m+2][n+2]>=128) output.g[m+2][n+2]=0;
									if(output.b[m+2][n+2]<128) output.b[m+2][n+2]=255;
									else if(output.b[m+2][n+2]>=128) output.b[m+2][n+2]=0;
									if(output.r[m+2][n-2]<128) output.r[m+2][n-2]=255;
									else if(output.r[m+2][n-2]>=128) output.r[m+2][n-2]=0;
									if(output.g[m+2][n-2]<128) output.g[m+2][n-2]=255;
									else if(output.g[m+2][n-2]>=128) output.g[m+2][n-2]=0;
									if(output.b[m+2][n-2]<128) output.b[m+2][n-2]=255;
									else if(output.b[m+2][n-2]>=128) output.b[m+2][n-2]=0;

									if(output.r[m-1][n+2]<128) output.r[m-1][n+2]=255;
									else if(output.r[m-1][n+2]>=128) output.r[m-1][n+2]=0;
									if(output.g[m-1][n+2]<128) output.g[m-1][n+2]=255;
									else if(output.g[m-1][n+2]>=128) output.g[m-1][n+2]=0;
									if(output.b[m-1][n+2]<128) output.b[m-1][n+2]=255;
									else if(output.b[m-1][n+2]>=128) output.b[m-1][n+2]=0;
									if(output.r[m+1][n+2]<128) output.r[m+1][n+2]=255;
									else if(output.r[m+1][n+2]>=128) output.r[m+1][n+2]=0;
									if(output.g[m+1][n+2]<128) output.g[m+1][n+2]=255;
									else if(output.g[m+1][n+2]>=128) output.g[m+1][n+2]=0;
									if(output.b[m+1][n+2]<128) output.b[m+1][n+2]=255;
									else if(output.b[m+1][n+2]>=128) output.b[m+1][n+2]=0;
									if(output.r[m-2][n+2]<128) output.r[m-2][n+2]=255;
									else if(output.r[m-2][n+2]>=128) output.r[m-2][n+2]=0;
									if(output.g[m-2][n+2]<128) output.g[m-2][n+2]=255;
									else if(output.g[m-2][n+2]>=128) output.g[m-2][n+2]=0;
									if(output.b[m-2][n+2]<128) output.b[m-2][n+2]=255;
									else if(output.b[m-2][n+2]>=128) output.b[m-2][n+2]=0;
									if(output.r[m+2][n+2]<128) output.r[m+2][n+2]=255;
									else if(output.r[m+2][n+2]>=128) output.r[m+2][n+2]=0;
									if(output.g[m+2][n+2]<128) output.g[m+2][n+2]=255;
									else if(output.g[m+2][n+2]>=128) output.g[m+2][n+2]=0;
									if(output.b[m+2][n+2]<128) output.b[m+2][n+2]=255;
									else if(output.b[m+2][n+2]>=128) output.b[m+2][n+2]=0;

									if(output.r[m-1][n-2]<128) output.r[m-1][n-2]=255;
									else if(output.r[m-1][n-2]>=128) output.r[m-1][n-2]=0;
									if(output.g[m-1][n-2]<128) output.g[m-1][n-2]=255;
									else if(output.g[m-1][n-2]>=128) output.g[m-1][n-2]=0;
									if(output.b[m-1][n-2]<128) output.b[m-1][n-2]=255;
									else if(output.b[m-1][n-2]>=128) output.b[m-1][n-2]=0;
									if(output.r[m+1][n-2]<128) output.r[m+1][n-2]=255;
									else if(output.r[m+1][n-2]>=128) output.r[m+1][n-2]=0;
									if(output.g[m+1][n-2]<128) output.g[m+1][n-2]=255;
									else if(output.g[m+1][n-2]>=128) output.g[m+1][n-2]=0;
									if(output.b[m+1][n-2]<128) output.b[m+1][n-2]=255;
									else if(output.b[m+1][n-2]>=128) output.b[m+1][n-2]=0;
									if(output.r[m-2][n-2]<128) output.r[m-2][n-2]=255;
									else if(output.r[m-2][n-2]>=128) output.r[m-2][n-2]=0;
									if(output.g[m-2][n-2]<128) output.g[m-2][n-2]=255;
									else if(output.g[m-2][n-2]>=128) output.g[m-2][n-2]=0;
									if(output.b[m-2][n-2]<128) output.b[m-2][n-2]=255;
									else if(output.b[m-2][n-2]>=128) output.b[m-2][n-2]=0;
									if(output.r[m+2][n-2]<128) output.r[m+2][n-2]=255;
									else if(output.r[m+2][n-2]>=128) output.r[m+2][n-2]=0;
									if(output.g[m+2][n-2]<128) output.g[m+2][n-2]=255;
									else if(output.g[m+2][n-2]>=128) output.g[m+2][n-2]=0;
									if(output.b[m+2][n-2]<128) output.b[m+2][n-2]=255;
									else if(output.b[m+2][n-2]>=128) output.b[m+2][n-2]=0;
								}

								else{
									output.r[m][n]=255;
									output.g[m][n]=0;
									output.b[m][n]=0;
									output.r[m-1][n]=255;
									output.g[m-1][n]=0;
									output.b[m-1][n]=0;
									output.r[m+1][n]=255;
									output.g[m+1][n]=0;
									output.b[m+1][n]=0;
									output.r[m][n-1]=255;
									output.g[m][n-1]=0;
									output.b[m][n-1]=0;
									output.r[m][n+1]=255;
									output.g[m][n+1]=0;
									output.b[m][n+1]=0;

									output.r[m-2][n]=255;
									output.g[m-2][n]=0;
									output.b[m-2][n]=0;
									output.r[m+2][n]=255;
									output.g[m+2][n]=0;
									output.b[m+2][n]=0;
									output.r[m][n-2]=255;
									output.g[m][n-2]=0;
									output.b[m][n-2]=0;
									output.r[m][n+2]=255;
									output.g[m][n+2]=0;
									output.b[m][n+2]=0;

									output.r[m-3][n]=255;
									output.g[m-3][n]=0;
									output.b[m-3][n]=0;
									output.r[m+3][n]=255;
									output.g[m+3][n]=0;
									output.b[m+3][n]=0;
									output.r[m][n-3]=255;
									output.g[m][n-3]=0;
									output.b[m][n-3]=0;
									output.r[m][n+3]=255;
									output.g[m][n+3]=0;
									output.b[m][n+3]=0;

									// square
									output.r[m-2][n+1]=255;
									output.g[m-2][n+1]=0;
									output.b[m-2][n+1]=0;
									output.r[m-2][n-1]=255;
									output.g[m-2][n-1]=0;
									output.b[m-2][n-1]=0;
									output.r[m-2][n+2]=255;
									output.g[m-2][n+2]=0;
									output.b[m-2][n+2]=0;
									output.r[m-2][n-2]=255;
									output.g[m-2][n-2]=0;
									output.b[m-2][n-2]=0;

									output.r[m+2][n+1]=255;
									output.g[m+2][n+1]=0;
									output.b[m+2][n+1]=0;
									output.r[m+2][n-1]=255;
									output.g[m+2][n-1]=0;
									output.b[m+2][n-1]=0;
									output.r[m+2][n+2]=255;
									output.g[m+2][n+2]=0;
									output.b[m+2][n+2]=0;
									output.r[m+2][n-2]=255;
									output.g[m+2][n-2]=0;
									output.b[m+2][n-2]=0;

									output.r[m-1][n+2]=255;
									output.g[m-1][n+2]=0;
									output.b[m-1][n+2]=0;
									output.r[m+1][n+2]=255;
									output.g[m+1][n+2]=0;
									output.b[m+1][n+2]=0;
									output.r[m-2][n+2]=255;
									output.g[m-2][n+2]=0;
									output.b[m-2][n+2]=0;
									output.r[m+2][n+2]=255;
									output.g[m+2][n+2]=0;
									output.b[m+2][n+2]=0;

									output.r[m-1][n-2]=255;
									output.g[m-1][n-2]=0;
									output.b[m-1][n-2]=0;
									output.r[m+1][n-2]=255;
									output.g[m+1][n-2]=0;
									output.b[m+1][n-2]=0;
									output.r[m-2][n-2]=255;
									output.g[m-2][n-2]=0;
									output.b[m-2][n-2]=0;
									output.r[m+2][n-2]=255;
									output.g[m+2][n-2]=0;
									output.b[m+2][n-2]=0;
								}


							}

					// Output Cell Identifier
					obj = labeled->cells.begin();
					last_obj = labeled->cells.end();

					if(highcontrast)
						val=0;

					for( ; obj!=last_obj; ++obj){

						int midx = obj->startx + ((obj->endx - obj->centroidX)/2);
						int midy = obj->centroidY;


						if(midx<output.xdim && midy<output.ydim && midx>0 && midy>0)
							if(midy-17<output.ydim && midy-17>0 && midx-50<output.xdim && midx-50>0){


							// Word "Cell"

							output.r[midy-3][midx-4]=val;
							output.g[midy-3][midx-4]=0;
							output.b[midy-3][midx-4]=0;
							output.r[midy-3][midx-5]=val;
							output.g[midy-3][midx-5]=0;
							output.b[midy-3][midx-5]=0;
							output.r[midy-3][midx-6]=val;
							output.g[midy-3][midx-6]=0;
							output.b[midy-3][midx-6]=0;
							output.r[midy-3][midx-7]=val;
							output.g[midy-3][midx-7]=0;
							output.b[midy-3][midx-7]=0;
							output.r[midy-3][midx-8]=val;
							output.g[midy-3][midx-8]=0;
							output.b[midy-3][midx-8]=0;
							output.r[midy-3][midx-9]=val;
							output.g[midy-3][midx-9]=0;
							output.b[midy-3][midx-9]=0;
							output.r[midy-3][midx-10]=val;
							output.g[midy-3][midx-10]=0;
							output.b[midy-3][midx-10]=0;
							output.r[midy-3][midx-11]=val;
							output.g[midy-3][midx-11]=0;
							output.b[midy-3][midx-11]=0;
							output.r[midy-3][midx-13]=val;
							output.g[midy-3][midx-13]=0;
							output.b[midy-3][midx-13]=0;
							output.r[midy-3][midx-14]=val;
							output.g[midy-3][midx-14]=0;
							output.b[midy-3][midx-14]=0;
							output.r[midy-3][midx-15]=val;
							output.g[midy-3][midx-15]=0;
							output.b[midy-3][midx-15]=0;
							output.r[midy-3][midx-16]=val;
							output.g[midy-3][midx-16]=0;
							output.b[midy-3][midx-16]=0;
							output.r[midy-3][midx-17]=val;
							output.g[midy-3][midx-17]=0;
							output.b[midy-3][midx-17]=0;
							output.r[midy-3][midx-18]=val;
							output.g[midy-3][midx-18]=0;
							output.b[midy-3][midx-18]=0;
							output.r[midy-3][midx-19]=val;
							output.g[midy-3][midx-19]=0;
							output.b[midy-3][midx-19]=0;
							output.r[midy-3][midx-20]=val;
							output.g[midy-3][midx-20]=0;
							output.b[midy-3][midx-20]=0;
							output.r[midy-3][midx-22]=val;
							output.g[midy-3][midx-22]=0;
							output.b[midy-3][midx-22]=0;
							output.r[midy-3][midx-23]=val;
							output.g[midy-3][midx-23]=0;
							output.b[midy-3][midx-23]=0;
							output.r[midy-3][midx-24]=val;
							output.g[midy-3][midx-24]=0;
							output.b[midy-3][midx-24]=0;
							output.r[midy-3][midx-25]=val;
							output.g[midy-3][midx-25]=0;
							output.b[midy-3][midx-25]=0;
							output.r[midy-3][midx-26]=val;
							output.g[midy-3][midx-26]=0;
							output.b[midy-3][midx-26]=0;
							output.r[midy-3][midx-27]=val;
							output.g[midy-3][midx-27]=0;
							output.b[midy-3][midx-27]=0;
							output.r[midy-3][midx-28]=val;
							output.g[midy-3][midx-28]=0;
							output.b[midy-3][midx-28]=0;
							output.r[midy-3][midx-29]=val;
							output.g[midy-3][midx-29]=0;
							output.b[midy-3][midx-29]=0;
							output.r[midy-3][midx-30]=val;
							output.g[midy-3][midx-30]=0;
							output.b[midy-3][midx-30]=0;
							output.r[midy-3][midx-31]=val;
							output.g[midy-3][midx-31]=0;
							output.b[midy-3][midx-31]=0;
							output.r[midy-3][midx-32]=val;
							output.g[midy-3][midx-32]=0;
							output.b[midy-3][midx-32]=0;
							output.r[midy-3][midx-36]=val;
							output.g[midy-3][midx-36]=0;
							output.b[midy-3][midx-36]=0;
							output.r[midy-3][midx-37]=val;
							output.g[midy-3][midx-37]=0;
							output.b[midy-3][midx-37]=0;
							output.r[midy-3][midx-38]=val;
							output.g[midy-3][midx-38]=0;
							output.b[midy-3][midx-38]=0;
							output.r[midy-3][midx-39]=val;
							output.g[midy-3][midx-39]=0;
							output.b[midy-3][midx-39]=0;
							output.r[midy-3][midx-40]=val;
							output.g[midy-3][midx-40]=0;
							output.b[midy-3][midx-40]=0;
							output.r[midy-3][midx-41]=val;
							output.g[midy-3][midx-41]=0;
							output.b[midy-3][midx-41]=0;
							output.r[midy-4][midx-4]=val;
							output.g[midy-4][midx-4]=0;
							output.b[midy-4][midx-4]=0;
							output.r[midy-4][midx-5]=val;
							output.g[midy-4][midx-5]=0;
							output.b[midy-4][midx-5]=0;
							output.r[midy-4][midx-6]=val;
							output.g[midy-4][midx-6]=0;
							output.b[midy-4][midx-6]=0;
							output.r[midy-4][midx-7]=val;
							output.g[midy-4][midx-7]=0;
							output.b[midy-4][midx-7]=0;
							output.r[midy-4][midx-8]=val;
							output.g[midy-4][midx-8]=0;
							output.b[midy-4][midx-8]=0;
							output.r[midy-4][midx-9]=val;
							output.g[midy-4][midx-9]=0;
							output.b[midy-4][midx-9]=0;
							output.r[midy-4][midx-10]=val;
							output.g[midy-4][midx-10]=0;
							output.b[midy-4][midx-10]=0;
							output.r[midy-4][midx-11]=val;
							output.g[midy-4][midx-11]=0;
							output.b[midy-4][midx-11]=0;
							output.r[midy-4][midx-13]=val;
							output.g[midy-4][midx-13]=0;
							output.b[midy-4][midx-13]=0;
							output.r[midy-4][midx-14]=val;
							output.g[midy-4][midx-14]=0;
							output.b[midy-4][midx-14]=0;
							output.r[midy-4][midx-15]=val;
							output.g[midy-4][midx-15]=0;
							output.b[midy-4][midx-15]=0;
							output.r[midy-4][midx-16]=val;
							output.g[midy-4][midx-16]=0;
							output.b[midy-4][midx-16]=0;
							output.r[midy-4][midx-17]=val;
							output.g[midy-4][midx-17]=0;
							output.b[midy-4][midx-17]=0;
							output.r[midy-4][midx-18]=val;
							output.g[midy-4][midx-18]=0;
							output.b[midy-4][midx-18]=0;
							output.r[midy-4][midx-19]=val;
							output.g[midy-4][midx-19]=0;
							output.b[midy-4][midx-19]=0;
							output.r[midy-4][midx-20]=val;
							output.g[midy-4][midx-20]=0;
							output.b[midy-4][midx-20]=0;
							output.r[midy-4][midx-22]=val;
							output.g[midy-4][midx-22]=0;
							output.b[midy-4][midx-22]=0;
							output.r[midy-4][midx-23]=val;
							output.g[midy-4][midx-23]=0;
							output.b[midy-4][midx-23]=0;
							output.r[midy-4][midx-24]=val;
							output.g[midy-4][midx-24]=0;
							output.b[midy-4][midx-24]=0;
							output.r[midy-4][midx-25]=val;
							output.g[midy-4][midx-25]=0;
							output.b[midy-4][midx-25]=0;
							output.r[midy-4][midx-26]=val;
							output.g[midy-4][midx-26]=0;
							output.b[midy-4][midx-26]=0;
							output.r[midy-4][midx-27]=val;
							output.g[midy-4][midx-27]=0;
							output.b[midy-4][midx-27]=0;
							output.r[midy-4][midx-28]=val;
							output.g[midy-4][midx-28]=0;
							output.b[midy-4][midx-28]=0;
							output.r[midy-4][midx-29]=val;
							output.g[midy-4][midx-29]=0;
							output.b[midy-4][midx-29]=0;
							output.r[midy-4][midx-30]=val;
							output.g[midy-4][midx-30]=0;
							output.b[midy-4][midx-30]=0;
							output.r[midy-4][midx-31]=val;
							output.g[midy-4][midx-31]=0;
							output.b[midy-4][midx-31]=0;
							output.r[midy-4][midx-32]=val;
							output.g[midy-4][midx-32]=0;
							output.b[midy-4][midx-32]=0;
							output.r[midy-4][midx-35]=val;
							output.g[midy-4][midx-35]=0;
							output.b[midy-4][midx-35]=0;
							output.r[midy-4][midx-36]=val;
							output.g[midy-4][midx-36]=0;
							output.b[midy-4][midx-36]=0;
							output.r[midy-4][midx-37]=val;
							output.g[midy-4][midx-37]=0;
							output.b[midy-4][midx-37]=0;
							output.r[midy-4][midx-38]=val;
							output.g[midy-4][midx-38]=0;
							output.b[midy-4][midx-38]=0;
							output.r[midy-4][midx-39]=val;
							output.g[midy-4][midx-39]=0;
							output.b[midy-4][midx-39]=0;
							output.r[midy-4][midx-40]=val;
							output.g[midy-4][midx-40]=0;
							output.b[midy-4][midx-40]=0;
							output.r[midy-4][midx-41]=val;
							output.g[midy-4][midx-41]=0;
							output.b[midy-4][midx-41]=0;
							output.r[midy-4][midx-42]=val;
							output.g[midy-4][midx-42]=0;
							output.b[midy-4][midx-42]=0;
							output.r[midy-5][midx-4]=val;
							output.g[midy-5][midx-4]=0;
							output.b[midy-5][midx-4]=0;
							output.r[midy-5][midx-5]=val;
							output.g[midy-5][midx-5]=0;
							output.b[midy-5][midx-5]=0;
							output.r[midy-5][midx-6]=val;
							output.g[midy-5][midx-6]=0;
							output.b[midy-5][midx-6]=0;
							output.r[midy-5][midx-7]=val;
							output.g[midy-5][midx-7]=0;
							output.b[midy-5][midx-7]=0;
							output.r[midy-5][midx-8]=val;
							output.g[midy-5][midx-8]=0;
							output.b[midy-5][midx-8]=0;
							output.r[midy-5][midx-9]=val;
							output.g[midy-5][midx-9]=0;
							output.b[midy-5][midx-9]=0;
							output.r[midy-5][midx-10]=val;
							output.g[midy-5][midx-10]=0;
							output.b[midy-5][midx-10]=0;
							output.r[midy-5][midx-11]=val;
							output.g[midy-5][midx-11]=0;
							output.b[midy-5][midx-11]=0;
							output.r[midy-5][midx-13]=val;
							output.g[midy-5][midx-13]=0;
							output.b[midy-5][midx-13]=0;
							output.r[midy-5][midx-14]=val;
							output.g[midy-5][midx-14]=0;
							output.b[midy-5][midx-14]=0;
							output.r[midy-5][midx-15]=val;
							output.g[midy-5][midx-15]=0;
							output.b[midy-5][midx-15]=0;
							output.r[midy-5][midx-16]=val;
							output.g[midy-5][midx-16]=0;
							output.b[midy-5][midx-16]=0;
							output.r[midy-5][midx-17]=val;
							output.g[midy-5][midx-17]=0;
							output.b[midy-5][midx-17]=0;
							output.r[midy-5][midx-18]=val;
							output.g[midy-5][midx-18]=0;
							output.b[midy-5][midx-18]=0;
							output.r[midy-5][midx-19]=val;
							output.g[midy-5][midx-19]=0;
							output.b[midy-5][midx-19]=0;
							output.r[midy-5][midx-20]=val;
							output.g[midy-5][midx-20]=0;
							output.b[midy-5][midx-20]=0;
							output.r[midy-5][midx-22]=val;
							output.g[midy-5][midx-22]=0;
							output.b[midy-5][midx-22]=0;
							output.r[midy-5][midx-23]=val;
							output.g[midy-5][midx-23]=0;
							output.b[midy-5][midx-23]=0;
							output.r[midy-5][midx-24]=val;
							output.g[midy-5][midx-24]=0;
							output.b[midy-5][midx-24]=0;
							output.r[midy-5][midx-25]=val;
							output.g[midy-5][midx-25]=0;
							output.b[midy-5][midx-25]=0;
							output.r[midy-5][midx-26]=val;
							output.g[midy-5][midx-26]=0;
							output.b[midy-5][midx-26]=0;
							output.r[midy-5][midx-27]=val;
							output.g[midy-5][midx-27]=0;
							output.b[midy-5][midx-27]=0;
							output.r[midy-5][midx-28]=val;
							output.g[midy-5][midx-28]=0;
							output.b[midy-5][midx-28]=0;
							output.r[midy-5][midx-29]=val;
							output.g[midy-5][midx-29]=0;
							output.b[midy-5][midx-29]=0;
							output.r[midy-5][midx-30]=val;
							output.g[midy-5][midx-30]=0;
							output.b[midy-5][midx-30]=0;
							output.r[midy-5][midx-31]=val;
							output.g[midy-5][midx-31]=0;
							output.b[midy-5][midx-31]=0;
							output.r[midy-5][midx-32]=val;
							output.g[midy-5][midx-32]=0;
							output.b[midy-5][midx-32]=0;
							output.r[midy-5][midx-34]=val;
							output.g[midy-5][midx-34]=0;
							output.b[midy-5][midx-34]=0;
							output.r[midy-5][midx-35]=val;
							output.g[midy-5][midx-35]=0;
							output.b[midy-5][midx-35]=0;
							output.r[midy-5][midx-36]=val;
							output.g[midy-5][midx-36]=0;
							output.b[midy-5][midx-36]=0;
							output.r[midy-5][midx-37]=val;
							output.g[midy-5][midx-37]=0;
							output.b[midy-5][midx-37]=0;
							output.r[midy-5][midx-40]=val;
							output.g[midy-5][midx-40]=0;
							output.b[midy-5][midx-40]=0;
							output.r[midy-5][midx-41]=val;
							output.g[midy-5][midx-41]=0;
							output.b[midy-5][midx-41]=0;
							output.r[midy-5][midx-42]=val;
							output.g[midy-5][midx-42]=0;
							output.b[midy-5][midx-42]=0;
							output.r[midy-5][midx-43]=val;
							output.g[midy-5][midx-43]=0;
							output.b[midy-5][midx-43]=0;
							output.r[midy-6][midx-9]=val;
							output.g[midy-6][midx-9]=0;
							output.b[midy-6][midx-9]=0;
							output.r[midy-6][midx-10]=val;
							output.g[midy-6][midx-10]=0;
							output.b[midy-6][midx-10]=0;
							output.r[midy-6][midx-11]=val;
							output.g[midy-6][midx-11]=0;
							output.b[midy-6][midx-11]=0;
							output.r[midy-6][midx-18]=val;
							output.g[midy-6][midx-18]=0;
							output.b[midy-6][midx-18]=0;
							output.r[midy-6][midx-19]=val;
							output.g[midy-6][midx-19]=0;
							output.b[midy-6][midx-19]=0;
							output.r[midy-6][midx-20]=val;
							output.g[midy-6][midx-20]=0;
							output.b[midy-6][midx-20]=0;
							output.r[midy-6][midx-30]=val;
							output.g[midy-6][midx-30]=0;
							output.b[midy-6][midx-30]=0;
							output.r[midy-6][midx-31]=val;
							output.g[midy-6][midx-31]=0;
							output.b[midy-6][midx-31]=0;
							output.r[midy-6][midx-32]=val;
							output.g[midy-6][midx-32]=0;
							output.b[midy-6][midx-32]=0;
							output.r[midy-6][midx-34]=val;
							output.g[midy-6][midx-34]=0;
							output.b[midy-6][midx-34]=0;
							output.r[midy-6][midx-35]=val;
							output.g[midy-6][midx-35]=0;
							output.b[midy-6][midx-35]=0;
							output.r[midy-6][midx-36]=val;
							output.g[midy-6][midx-36]=0;
							output.b[midy-6][midx-36]=0;
							output.r[midy-6][midx-41]=val;
							output.g[midy-6][midx-41]=0;
							output.b[midy-6][midx-41]=0;
							output.r[midy-6][midx-42]=val;
							output.g[midy-6][midx-42]=0;
							output.b[midy-6][midx-42]=0;
							output.r[midy-6][midx-43]=val;
							output.g[midy-6][midx-43]=0;
							output.b[midy-6][midx-43]=0;
							output.r[midy-6][midx-44]=val;
							output.g[midy-6][midx-44]=0;
							output.b[midy-6][midx-44]=0;
							output.r[midy-7][midx-9]=val;
							output.g[midy-7][midx-9]=0;
							output.b[midy-7][midx-9]=0;
							output.r[midy-7][midx-10]=val;
							output.g[midy-7][midx-10]=0;
							output.b[midy-7][midx-10]=0;
							output.r[midy-7][midx-11]=val;
							output.g[midy-7][midx-11]=0;
							output.b[midy-7][midx-11]=0;
							output.r[midy-7][midx-18]=val;
							output.g[midy-7][midx-18]=0;
							output.b[midy-7][midx-18]=0;
							output.r[midy-7][midx-19]=val;
							output.g[midy-7][midx-19]=0;
							output.b[midy-7][midx-19]=0;
							output.r[midy-7][midx-20]=val;
							output.g[midy-7][midx-20]=0;
							output.b[midy-7][midx-20]=0;
							output.r[midy-7][midx-30]=val;
							output.g[midy-7][midx-30]=0;
							output.b[midy-7][midx-30]=0;
							output.r[midy-7][midx-31]=val;
							output.g[midy-7][midx-31]=0;
							output.b[midy-7][midx-31]=0;
							output.r[midy-7][midx-32]=val;
							output.g[midy-7][midx-32]=0;
							output.b[midy-7][midx-32]=0;
							output.r[midy-7][midx-34]=val;
							output.g[midy-7][midx-34]=0;
							output.b[midy-7][midx-34]=0;
							output.r[midy-7][midx-35]=val;
							output.g[midy-7][midx-35]=0;
							output.b[midy-7][midx-35]=0;
							output.r[midy-7][midx-42]=val;
							output.g[midy-7][midx-42]=0;
							output.b[midy-7][midx-42]=0;
							output.r[midy-7][midx-43]=val;
							output.g[midy-7][midx-43]=0;
							output.b[midy-7][midx-43]=0;
							output.r[midy-7][midx-44]=val;
							output.g[midy-7][midx-44]=0;
							output.b[midy-7][midx-44]=0;
							output.r[midy-8][midx-9]=val;
							output.g[midy-8][midx-9]=0;
							output.b[midy-8][midx-9]=0;
							output.r[midy-8][midx-10]=val;
							output.g[midy-8][midx-10]=0;
							output.b[midy-8][midx-10]=0;
							output.r[midy-8][midx-11]=val;
							output.g[midy-8][midx-11]=0;
							output.b[midy-8][midx-11]=0;
							output.r[midy-8][midx-18]=val;
							output.g[midy-8][midx-18]=0;
							output.b[midy-8][midx-18]=0;
							output.r[midy-8][midx-19]=val;
							output.g[midy-8][midx-19]=0;
							output.b[midy-8][midx-19]=0;
							output.r[midy-8][midx-20]=val;
							output.g[midy-8][midx-20]=0;
							output.b[midy-8][midx-20]=0;
							output.r[midy-8][midx-30]=val;
							output.g[midy-8][midx-30]=0;
							output.b[midy-8][midx-30]=0;
							output.r[midy-8][midx-31]=val;
							output.g[midy-8][midx-31]=0;
							output.b[midy-8][midx-31]=0;
							output.r[midy-8][midx-32]=val;
							output.g[midy-8][midx-32]=0;
							output.b[midy-8][midx-32]=0;
							output.r[midy-8][midx-42]=val;
							output.g[midy-8][midx-42]=0;
							output.b[midy-8][midx-42]=0;
							output.r[midy-8][midx-43]=val;
							output.g[midy-8][midx-43]=0;
							output.b[midy-8][midx-43]=0;
							output.r[midy-8][midx-44]=val;
							output.g[midy-8][midx-44]=0;
							output.b[midy-8][midx-44]=0;
							output.r[midy-9][midx-9]=val;
							output.g[midy-9][midx-9]=0;
							output.b[midy-9][midx-9]=0;
							output.r[midy-9][midx-10]=val;
							output.g[midy-9][midx-10]=0;
							output.b[midy-9][midx-10]=0;
							output.r[midy-9][midx-11]=val;
							output.g[midy-9][midx-11]=0;
							output.b[midy-9][midx-11]=0;
							output.r[midy-9][midx-18]=val;
							output.g[midy-9][midx-18]=0;
							output.b[midy-9][midx-18]=0;
							output.r[midy-9][midx-19]=val;
							output.g[midy-9][midx-19]=0;
							output.b[midy-9][midx-19]=0;
							output.r[midy-9][midx-20]=val;
							output.g[midy-9][midx-20]=0;
							output.b[midy-9][midx-20]=0;
							output.r[midy-9][midx-23]=val;
							output.g[midy-9][midx-23]=0;
							output.b[midy-9][midx-23]=0;
							output.r[midy-9][midx-24]=val;
							output.g[midy-9][midx-24]=0;
							output.b[midy-9][midx-24]=0;
							output.r[midy-9][midx-25]=val;
							output.g[midy-9][midx-25]=0;
							output.b[midy-9][midx-25]=0;
							output.r[midy-9][midx-26]=val;
							output.g[midy-9][midx-26]=0;
							output.b[midy-9][midx-26]=0;
							output.r[midy-9][midx-27]=val;
							output.g[midy-9][midx-27]=0;
							output.b[midy-9][midx-27]=0;
							output.r[midy-9][midx-28]=val;
							output.g[midy-9][midx-28]=0;
							output.b[midy-9][midx-28]=0;
							output.r[midy-9][midx-29]=val;
							output.g[midy-9][midx-29]=0;
							output.b[midy-9][midx-29]=0;
							output.r[midy-9][midx-30]=val;
							output.g[midy-9][midx-30]=0;
							output.b[midy-9][midx-30]=0;
							output.r[midy-9][midx-31]=val;
							output.g[midy-9][midx-31]=0;
							output.b[midy-9][midx-31]=0;
							output.r[midy-9][midx-32]=val;
							output.g[midy-9][midx-32]=0;
							output.b[midy-9][midx-32]=0;
							output.r[midy-9][midx-42]=val;
							output.g[midy-9][midx-42]=0;
							output.b[midy-9][midx-42]=0;
							output.r[midy-9][midx-43]=val;
							output.g[midy-9][midx-43]=0;
							output.b[midy-9][midx-43]=0;
							output.r[midy-9][midx-44]=val;
							output.g[midy-9][midx-44]=0;
							output.b[midy-9][midx-44]=0;
							output.r[midy-10][midx-9]=val;
							output.g[midy-10][midx-9]=0;
							output.b[midy-10][midx-9]=0;
							output.r[midy-10][midx-10]=val;
							output.g[midy-10][midx-10]=0;
							output.b[midy-10][midx-10]=0;
							output.r[midy-10][midx-11]=val;
							output.g[midy-10][midx-11]=0;
							output.b[midy-10][midx-11]=0;
							output.r[midy-10][midx-18]=val;
							output.g[midy-10][midx-18]=0;
							output.b[midy-10][midx-18]=0;
							output.r[midy-10][midx-19]=val;
							output.g[midy-10][midx-19]=0;
							output.b[midy-10][midx-19]=0;
							output.r[midy-10][midx-20]=val;
							output.g[midy-10][midx-20]=0;
							output.b[midy-10][midx-20]=0;
							output.r[midy-10][midx-23]=val;
							output.g[midy-10][midx-23]=0;
							output.b[midy-10][midx-23]=0;
							output.r[midy-10][midx-24]=val;
							output.g[midy-10][midx-24]=0;
							output.b[midy-10][midx-24]=0;
							output.r[midy-10][midx-25]=val;
							output.g[midy-10][midx-25]=0;
							output.b[midy-10][midx-25]=0;
							output.r[midy-10][midx-26]=val;
							output.g[midy-10][midx-26]=0;
							output.b[midy-10][midx-26]=0;
							output.r[midy-10][midx-27]=val;
							output.g[midy-10][midx-27]=0;
							output.b[midy-10][midx-27]=0;
							output.r[midy-10][midx-28]=val;
							output.g[midy-10][midx-28]=0;
							output.b[midy-10][midx-28]=0;
							output.r[midy-10][midx-29]=val;
							output.g[midy-10][midx-29]=0;
							output.b[midy-10][midx-29]=0;
							output.r[midy-10][midx-30]=val;
							output.g[midy-10][midx-30]=0;
							output.b[midy-10][midx-30]=0;
							output.r[midy-10][midx-31]=val;
							output.g[midy-10][midx-31]=0;
							output.b[midy-10][midx-31]=0;
							output.r[midy-10][midx-32]=val;
							output.g[midy-10][midx-32]=0;
							output.b[midy-10][midx-32]=0;
							output.r[midy-10][midx-42]=val;
							output.g[midy-10][midx-42]=0;
							output.b[midy-10][midx-42]=0;
							output.r[midy-10][midx-43]=val;
							output.g[midy-10][midx-43]=0;
							output.b[midy-10][midx-43]=0;
							output.r[midy-10][midx-44]=val;
							output.g[midy-10][midx-44]=0;
							output.b[midy-10][midx-44]=0;
							output.r[midy-11][midx-9]=val;
							output.g[midy-11][midx-9]=0;
							output.b[midy-11][midx-9]=0;
							output.r[midy-11][midx-10]=val;
							output.g[midy-11][midx-10]=0;
							output.b[midy-11][midx-10]=0;
							output.r[midy-11][midx-11]=val;
							output.g[midy-11][midx-11]=0;
							output.b[midy-11][midx-11]=0;
							output.r[midy-11][midx-18]=val;
							output.g[midy-11][midx-18]=0;
							output.b[midy-11][midx-18]=0;
							output.r[midy-11][midx-19]=val;
							output.g[midy-11][midx-19]=0;
							output.b[midy-11][midx-19]=0;
							output.r[midy-11][midx-20]=val;
							output.g[midy-11][midx-20]=0;
							output.b[midy-11][midx-20]=0;
							output.r[midy-11][midx-23]=val;
							output.g[midy-11][midx-23]=0;
							output.b[midy-11][midx-23]=0;
							output.r[midy-11][midx-24]=val;
							output.g[midy-11][midx-24]=0;
							output.b[midy-11][midx-24]=0;
							output.r[midy-11][midx-25]=val;
							output.g[midy-11][midx-25]=0;
							output.b[midy-11][midx-25]=0;
							output.r[midy-11][midx-26]=val;
							output.g[midy-11][midx-26]=0;
							output.b[midy-11][midx-26]=0;
							output.r[midy-11][midx-27]=val;
							output.g[midy-11][midx-27]=0;
							output.b[midy-11][midx-27]=0;
							output.r[midy-11][midx-28]=val;
							output.g[midy-11][midx-28]=0;
							output.b[midy-11][midx-28]=0;
							output.r[midy-11][midx-29]=val;
							output.g[midy-11][midx-29]=0;
							output.b[midy-11][midx-29]=0;
							output.r[midy-11][midx-30]=val;
							output.g[midy-11][midx-30]=0;
							output.b[midy-11][midx-30]=0;
							output.r[midy-11][midx-31]=val;
							output.g[midy-11][midx-31]=0;
							output.b[midy-11][midx-31]=0;
							output.r[midy-11][midx-32]=val;
							output.g[midy-11][midx-32]=0;
							output.b[midy-11][midx-32]=0;
							output.r[midy-11][midx-42]=val;
							output.g[midy-11][midx-42]=0;
							output.b[midy-11][midx-42]=0;
							output.r[midy-11][midx-43]=val;
							output.g[midy-11][midx-43]=0;
							output.b[midy-11][midx-43]=0;
							output.r[midy-11][midx-44]=val;
							output.g[midy-11][midx-44]=0;
							output.b[midy-11][midx-44]=0;
							output.r[midy-12][midx-9]=val;
							output.g[midy-12][midx-9]=0;
							output.b[midy-12][midx-9]=0;
							output.r[midy-12][midx-10]=val;
							output.g[midy-12][midx-10]=0;
							output.b[midy-12][midx-10]=0;
							output.r[midy-12][midx-11]=val;
							output.g[midy-12][midx-11]=0;
							output.b[midy-12][midx-11]=0;
							output.r[midy-12][midx-18]=val;
							output.g[midy-12][midx-18]=0;
							output.b[midy-12][midx-18]=0;
							output.r[midy-12][midx-19]=val;
							output.g[midy-12][midx-19]=0;
							output.b[midy-12][midx-19]=0;
							output.r[midy-12][midx-20]=val;
							output.g[midy-12][midx-20]=0;
							output.b[midy-12][midx-20]=0;
							output.r[midy-12][midx-30]=val;
							output.g[midy-12][midx-30]=0;
							output.b[midy-12][midx-30]=0;
							output.r[midy-12][midx-31]=val;
							output.g[midy-12][midx-31]=0;
							output.b[midy-12][midx-31]=0;
							output.r[midy-12][midx-32]=val;
							output.g[midy-12][midx-32]=0;
							output.b[midy-12][midx-32]=0;
							output.r[midy-12][midx-34]=val;
							output.g[midy-12][midx-34]=0;
							output.b[midy-12][midx-34]=0;
							output.r[midy-12][midx-35]=val;
							output.g[midy-12][midx-35]=0;
							output.b[midy-12][midx-35]=0;
							output.r[midy-12][midx-42]=val;
							output.g[midy-12][midx-42]=0;
							output.b[midy-12][midx-42]=0;
							output.r[midy-12][midx-43]=val;
							output.g[midy-12][midx-43]=0;
							output.b[midy-12][midx-43]=0;
							output.r[midy-12][midx-44]=val;
							output.g[midy-12][midx-44]=0;
							output.b[midy-12][midx-44]=0;
							output.r[midy-13][midx-9]=val;
							output.g[midy-13][midx-9]=0;
							output.b[midy-13][midx-9]=0;
							output.r[midy-13][midx-10]=val;
							output.g[midy-13][midx-10]=0;
							output.b[midy-13][midx-10]=0;
							output.r[midy-13][midx-11]=val;
							output.g[midy-13][midx-11]=0;
							output.b[midy-13][midx-11]=0;
							output.r[midy-13][midx-18]=val;
							output.g[midy-13][midx-18]=0;
							output.b[midy-13][midx-18]=0;
							output.r[midy-13][midx-19]=val;
							output.g[midy-13][midx-19]=0;
							output.b[midy-13][midx-19]=0;
							output.r[midy-13][midx-20]=val;
							output.g[midy-13][midx-20]=0;
							output.b[midy-13][midx-20]=0;
							output.r[midy-13][midx-30]=val;
							output.g[midy-13][midx-30]=0;
							output.b[midy-13][midx-30]=0;
							output.r[midy-13][midx-31]=val;
							output.g[midy-13][midx-31]=0;
							output.b[midy-13][midx-31]=0;
							output.r[midy-13][midx-32]=val;
							output.g[midy-13][midx-32]=0;
							output.b[midy-13][midx-32]=0;
							output.r[midy-13][midx-34]=val;
							output.g[midy-13][midx-34]=0;
							output.b[midy-13][midx-34]=0;
							output.r[midy-13][midx-35]=val;
							output.g[midy-13][midx-35]=0;
							output.b[midy-13][midx-35]=0;
							output.r[midy-13][midx-36]=val;
							output.g[midy-13][midx-36]=0;
							output.b[midy-13][midx-36]=0;
							output.r[midy-13][midx-41]=val;
							output.g[midy-13][midx-41]=0;
							output.b[midy-13][midx-41]=0;
							output.r[midy-13][midx-42]=val;
							output.g[midy-13][midx-42]=0;
							output.b[midy-13][midx-42]=0;
							output.r[midy-13][midx-43]=val;
							output.g[midy-13][midx-43]=0;
							output.b[midy-13][midx-43]=0;
							output.r[midy-13][midx-44]=val;
							output.g[midy-13][midx-44]=0;
							output.b[midy-13][midx-44]=0;
							output.r[midy-14][midx-9]=val;
							output.g[midy-14][midx-9]=0;
							output.b[midy-14][midx-9]=0;
							output.r[midy-14][midx-10]=val;
							output.g[midy-14][midx-10]=0;
							output.b[midy-14][midx-10]=0;
							output.r[midy-14][midx-11]=val;
							output.g[midy-14][midx-11]=0;
							output.b[midy-14][midx-11]=0;
							output.r[midy-14][midx-18]=val;
							output.g[midy-14][midx-18]=0;
							output.b[midy-14][midx-18]=0;
							output.r[midy-14][midx-19]=val;
							output.g[midy-14][midx-19]=0;
							output.b[midy-14][midx-19]=0;
							output.r[midy-14][midx-20]=val;
							output.g[midy-14][midx-20]=0;
							output.b[midy-14][midx-20]=0;
							output.r[midy-14][midx-23]=val;
							output.g[midy-14][midx-23]=0;
							output.b[midy-14][midx-23]=0;
							output.r[midy-14][midx-24]=val;
							output.g[midy-14][midx-24]=0;
							output.b[midy-14][midx-24]=0;
							output.r[midy-14][midx-25]=val;
							output.g[midy-14][midx-25]=0;
							output.b[midy-14][midx-25]=0;
							output.r[midy-14][midx-26]=val;
							output.g[midy-14][midx-26]=0;
							output.b[midy-14][midx-26]=0;
							output.r[midy-14][midx-27]=val;
							output.g[midy-14][midx-27]=0;
							output.b[midy-14][midx-27]=0;
							output.r[midy-14][midx-28]=val;
							output.g[midy-14][midx-28]=0;
							output.b[midy-14][midx-28]=0;
							output.r[midy-14][midx-29]=val;
							output.g[midy-14][midx-29]=0;
							output.b[midy-14][midx-29]=0;
							output.r[midy-14][midx-30]=val;
							output.g[midy-14][midx-30]=0;
							output.b[midy-14][midx-30]=0;
							output.r[midy-14][midx-31]=val;
							output.g[midy-14][midx-31]=0;
							output.b[midy-14][midx-31]=0;
							output.r[midy-14][midx-32]=val;
							output.g[midy-14][midx-32]=0;
							output.b[midy-14][midx-32]=0;
							output.r[midy-14][midx-34]=val;
							output.g[midy-14][midx-34]=0;
							output.b[midy-14][midx-34]=0;
							output.r[midy-14][midx-35]=val;
							output.g[midy-14][midx-35]=0;
							output.b[midy-14][midx-35]=0;
							output.r[midy-14][midx-36]=val;
							output.g[midy-14][midx-36]=0;
							output.b[midy-14][midx-36]=0;
							output.r[midy-14][midx-37]=val;
							output.g[midy-14][midx-37]=0;
							output.b[midy-14][midx-37]=0;
							output.r[midy-14][midx-40]=val;
							output.g[midy-14][midx-40]=0;
							output.b[midy-14][midx-40]=0;
							output.r[midy-14][midx-41]=val;
							output.g[midy-14][midx-41]=0;
							output.b[midy-14][midx-41]=0;
							output.r[midy-14][midx-42]=val;
							output.g[midy-14][midx-42]=0;
							output.b[midy-14][midx-42]=0;
							output.r[midy-14][midx-43]=val;
							output.g[midy-14][midx-43]=0;
							output.b[midy-14][midx-43]=0;
							output.r[midy-15][midx-9]=val;
							output.g[midy-15][midx-9]=0;
							output.b[midy-15][midx-9]=0;
							output.r[midy-15][midx-10]=val;
							output.g[midy-15][midx-10]=0;
							output.b[midy-15][midx-10]=0;
							output.r[midy-15][midx-11]=val;
							output.g[midy-15][midx-11]=0;
							output.b[midy-15][midx-11]=0;
							output.r[midy-15][midx-18]=val;
							output.g[midy-15][midx-18]=0;
							output.b[midy-15][midx-18]=0;
							output.r[midy-15][midx-19]=val;
							output.g[midy-15][midx-19]=0;
							output.b[midy-15][midx-19]=0;
							output.r[midy-15][midx-20]=val;
							output.g[midy-15][midx-20]=0;
							output.b[midy-15][midx-20]=0;
							output.r[midy-15][midx-23]=val;
							output.g[midy-15][midx-23]=0;
							output.b[midy-15][midx-23]=0;
							output.r[midy-15][midx-24]=val;
							output.g[midy-15][midx-24]=0;
							output.b[midy-15][midx-24]=0;
							output.r[midy-15][midx-25]=val;
							output.g[midy-15][midx-25]=0;
							output.b[midy-15][midx-25]=0;
							output.r[midy-15][midx-26]=val;
							output.g[midy-15][midx-26]=0;
							output.b[midy-15][midx-26]=0;
							output.r[midy-15][midx-27]=val;
							output.g[midy-15][midx-27]=0;
							output.b[midy-15][midx-27]=0;
							output.r[midy-15][midx-28]=val;
							output.g[midy-15][midx-28]=0;
							output.b[midy-15][midx-28]=0;
							output.r[midy-15][midx-29]=val;
							output.g[midy-15][midx-29]=0;
							output.b[midy-15][midx-29]=0;
							output.r[midy-15][midx-30]=val;
							output.g[midy-15][midx-30]=0;
							output.b[midy-15][midx-30]=0;
							output.r[midy-15][midx-31]=val;
							output.g[midy-15][midx-31]=0;
							output.b[midy-15][midx-31]=0;
							output.r[midy-15][midx-32]=val;
							output.g[midy-15][midx-32]=0;
							output.b[midy-15][midx-32]=0;
							output.r[midy-15][midx-35]=val;
							output.g[midy-15][midx-35]=0;
							output.b[midy-15][midx-35]=0;
							output.r[midy-15][midx-36]=val;
							output.g[midy-15][midx-36]=0;
							output.b[midy-15][midx-36]=0;
							output.r[midy-15][midx-37]=val;
							output.g[midy-15][midx-37]=0;
							output.b[midy-15][midx-37]=0;
							output.r[midy-15][midx-38]=val;
							output.g[midy-15][midx-38]=0;
							output.b[midy-15][midx-38]=0;
							output.r[midy-15][midx-39]=val;
							output.g[midy-15][midx-39]=0;
							output.b[midy-15][midx-39]=0;
							output.r[midy-15][midx-40]=val;
							output.g[midy-15][midx-40]=0;
							output.b[midy-15][midx-40]=0;
							output.r[midy-15][midx-41]=val;
							output.g[midy-15][midx-41]=0;
							output.b[midy-15][midx-41]=0;
							output.r[midy-15][midx-42]=val;
							output.g[midy-15][midx-42]=0;
							output.b[midy-15][midx-42]=0;
							output.r[midy-16][midx-9]=val;
							output.g[midy-16][midx-9]=0;
							output.b[midy-16][midx-9]=0;
							output.r[midy-16][midx-10]=val;
							output.g[midy-16][midx-10]=0;
							output.b[midy-16][midx-10]=0;
							output.r[midy-16][midx-11]=val;
							output.g[midy-16][midx-11]=0;
							output.b[midy-16][midx-11]=0;
							output.r[midy-16][midx-18]=val;
							output.g[midy-16][midx-18]=0;
							output.b[midy-16][midx-18]=0;
							output.r[midy-16][midx-19]=val;
							output.g[midy-16][midx-19]=0;
							output.b[midy-16][midx-19]=0;
							output.r[midy-16][midx-20]=val;
							output.g[midy-16][midx-20]=0;
							output.b[midy-16][midx-20]=0;
							output.r[midy-16][midx-23]=val;
							output.g[midy-16][midx-23]=0;
							output.b[midy-16][midx-23]=0;
							output.r[midy-16][midx-24]=val;
							output.g[midy-16][midx-24]=0;
							output.b[midy-16][midx-24]=0;
							output.r[midy-16][midx-25]=val;
							output.g[midy-16][midx-25]=0;
							output.b[midy-16][midx-25]=0;
							output.r[midy-16][midx-26]=val;
							output.g[midy-16][midx-26]=0;
							output.b[midy-16][midx-26]=0;
							output.r[midy-16][midx-27]=val;
							output.g[midy-16][midx-27]=0;
							output.b[midy-16][midx-27]=0;
							output.r[midy-16][midx-28]=val;
							output.g[midy-16][midx-28]=0;
							output.b[midy-16][midx-28]=0;
							output.r[midy-16][midx-29]=val;
							output.g[midy-16][midx-29]=0;
							output.b[midy-16][midx-29]=0;
							output.r[midy-16][midx-30]=val;
							output.g[midy-16][midx-30]=0;
							output.b[midy-16][midx-30]=0;
							output.r[midy-16][midx-31]=val;
							output.g[midy-16][midx-31]=0;
							output.b[midy-16][midx-31]=0;
							output.r[midy-16][midx-32]=val;
							output.g[midy-16][midx-32]=0;
							output.b[midy-16][midx-32]=0;
							output.r[midy-16][midx-36]=val;
							output.g[midy-16][midx-36]=0;
							output.b[midy-16][midx-36]=0;
							output.r[midy-16][midx-37]=val;
							output.g[midy-16][midx-37]=0;
							output.b[midy-16][midx-37]=0;
							output.r[midy-16][midx-38]=val;
							output.g[midy-16][midx-38]=0;
							output.b[midy-16][midx-38]=0;
							output.r[midy-16][midx-39]=val;
							output.g[midy-16][midx-39]=0;
							output.b[midy-16][midx-39]=0;
							output.r[midy-16][midx-40]=val;
							output.g[midy-16][midx-40]=0;
							output.b[midy-16][midx-40]=0;
							output.r[midy-16][midx-41]=val;
							output.g[midy-16][midx-41]=0;
							output.b[midy-16][midx-41]=0;



							int num=0;
							if(obj->actCoreID!=-1)
								num=obj->actCoreID;
							else
								num=obj->objectID;

							int temp=num;
							int digs=1;
							while(temp>9){
								temp=temp%10;
								digs++;
							}

							char numplace[10];
							itoa(num,numplace,10);

							vector<char> numplz;
							for(int i=digs-1; i>=0; i--)
								numplz.push_back(numplace[i]);

							while(numplz.size()>0){

								// Get digit
								int writenum = numplz.back()-'0';
								numplz.pop_back();

								midx+=10;

								if(midx-10>0 && midx-10<output.xdim)
									if(midy-15>0 && midy-15<output.ydim){

										// Output 0
										if(writenum==0){

											output.r[midy-4][midx-4]=val;
											output.g[midy-4][midx-4]=0;
											output.b[midy-4][midx-4]=0;
											output.r[midy-4][midx-5]=val;
											output.g[midy-4][midx-5]=0;
											output.b[midy-4][midx-5]=0;
											output.r[midy-4][midx-6]=val;
											output.g[midy-4][midx-6]=0;
											output.b[midy-4][midx-6]=0;
											output.r[midy-4][midx-7]=val;
											output.g[midy-4][midx-7]=0;
											output.b[midy-4][midx-7]=0;
											output.r[midy-4][midx-8]=val;
											output.g[midy-4][midx-8]=0;
											output.b[midy-4][midx-8]=0;
											output.r[midy-5][midx-3]=val;
											output.g[midy-5][midx-3]=0;
											output.b[midy-5][midx-3]=0;
											output.r[midy-5][midx-4]=val;
											output.g[midy-5][midx-4]=0;
											output.b[midy-5][midx-4]=0;
											output.r[midy-5][midx-5]=val;
											output.g[midy-5][midx-5]=0;
											output.b[midy-5][midx-5]=0;
											output.r[midy-5][midx-7]=val;
											output.g[midy-5][midx-7]=0;
											output.b[midy-5][midx-7]=0;
											output.r[midy-5][midx-8]=val;
											output.g[midy-5][midx-8]=0;
											output.b[midy-5][midx-8]=0;
											output.r[midy-5][midx-9]=val;
											output.g[midy-5][midx-9]=0;
											output.b[midy-5][midx-9]=0;
											output.r[midy-6][midx-3]=val;
											output.g[midy-6][midx-3]=0;
											output.b[midy-6][midx-3]=0;
											output.r[midy-6][midx-4]=val;
											output.g[midy-6][midx-4]=0;
											output.b[midy-6][midx-4]=0;
											output.r[midy-6][midx-8]=val;
											output.g[midy-6][midx-8]=0;
											output.b[midy-6][midx-8]=0;
											output.r[midy-6][midx-9]=val;
											output.g[midy-6][midx-9]=0;
											output.b[midy-6][midx-9]=0;
											output.r[midy-7][midx-2]=val;
											output.g[midy-7][midx-2]=0;
											output.b[midy-7][midx-2]=0;
											output.r[midy-7][midx-3]=val;
											output.g[midy-7][midx-3]=0;
											output.b[midy-7][midx-3]=0;
											output.r[midy-7][midx-4]=val;
											output.g[midy-7][midx-4]=0;
											output.b[midy-7][midx-4]=0;
											output.r[midy-7][midx-8]=val;
											output.g[midy-7][midx-8]=0;
											output.b[midy-7][midx-8]=0;
											output.r[midy-7][midx-9]=val;
											output.g[midy-7][midx-9]=0;
											output.b[midy-7][midx-9]=0;
											output.r[midy-7][midx-10]=val;
											output.g[midy-7][midx-10]=0;
											output.b[midy-7][midx-10]=0;
											output.r[midy-8][midx-2]=val;
											output.g[midy-8][midx-2]=0;
											output.b[midy-8][midx-2]=0;
											output.r[midy-8][midx-3]=val;
											output.g[midy-8][midx-3]=0;
											output.b[midy-8][midx-3]=0;
											output.r[midy-8][midx-4]=val;
											output.g[midy-8][midx-4]=0;
											output.b[midy-8][midx-4]=0;
											output.r[midy-8][midx-8]=val;
											output.g[midy-8][midx-8]=0;
											output.b[midy-8][midx-8]=0;
											output.r[midy-8][midx-9]=val;
											output.g[midy-8][midx-9]=0;
											output.b[midy-8][midx-9]=0;
											output.r[midy-8][midx-10]=val;
											output.g[midy-8][midx-10]=0;
											output.b[midy-8][midx-10]=0;
											output.r[midy-9][midx-2]=val;
											output.g[midy-9][midx-2]=0;
											output.b[midy-9][midx-2]=0;
											output.r[midy-9][midx-3]=val;
											output.g[midy-9][midx-3]=0;
											output.b[midy-9][midx-3]=0;
											output.r[midy-9][midx-4]=val;
											output.g[midy-9][midx-4]=0;
											output.b[midy-9][midx-4]=0;
											output.r[midy-9][midx-8]=val;
											output.g[midy-9][midx-8]=0;
											output.b[midy-9][midx-8]=0;
											output.r[midy-9][midx-9]=val;
											output.g[midy-9][midx-9]=0;
											output.b[midy-9][midx-9]=0;
											output.r[midy-9][midx-10]=val;
											output.g[midy-9][midx-10]=0;
											output.b[midy-9][midx-10]=0;
											output.r[midy-10][midx-2]=val;
											output.g[midy-10][midx-2]=0;
											output.b[midy-10][midx-2]=0;
											output.r[midy-10][midx-3]=val;
											output.g[midy-10][midx-3]=0;
											output.b[midy-10][midx-3]=0;
											output.r[midy-10][midx-4]=val;
											output.g[midy-10][midx-4]=0;
											output.b[midy-10][midx-4]=0;
											output.r[midy-10][midx-8]=val;
											output.g[midy-10][midx-8]=0;
											output.b[midy-10][midx-8]=0;
											output.r[midy-10][midx-9]=val;
											output.g[midy-10][midx-9]=0;
											output.b[midy-10][midx-9]=0;
											output.r[midy-10][midx-10]=val;
											output.g[midy-10][midx-10]=0;
											output.b[midy-10][midx-10]=0;
											output.r[midy-11][midx-2]=val;
											output.g[midy-11][midx-2]=0;
											output.b[midy-11][midx-2]=0;
											output.r[midy-11][midx-3]=val;
											output.g[midy-11][midx-3]=0;
											output.b[midy-11][midx-3]=0;
											output.r[midy-11][midx-4]=val;
											output.g[midy-11][midx-4]=0;
											output.b[midy-11][midx-4]=0;
											output.r[midy-11][midx-8]=val;
											output.g[midy-11][midx-8]=0;
											output.b[midy-11][midx-8]=0;
											output.r[midy-11][midx-9]=val;
											output.g[midy-11][midx-9]=0;
											output.b[midy-11][midx-9]=0;
											output.r[midy-11][midx-10]=val;
											output.g[midy-11][midx-10]=0;
											output.b[midy-11][midx-10]=0;
											output.r[midy-12][midx-2]=val;
											output.g[midy-12][midx-2]=0;
											output.b[midy-12][midx-2]=0;
											output.r[midy-12][midx-3]=val;
											output.g[midy-12][midx-3]=0;
											output.b[midy-12][midx-3]=0;
											output.r[midy-12][midx-4]=val;
											output.g[midy-12][midx-4]=0;
											output.b[midy-12][midx-4]=0;
											output.r[midy-12][midx-8]=val;
											output.g[midy-12][midx-8]=0;
											output.b[midy-12][midx-8]=0;
											output.r[midy-12][midx-9]=val;
											output.g[midy-12][midx-9]=0;
											output.b[midy-12][midx-9]=0;
											output.r[midy-12][midx-10]=val;
											output.g[midy-12][midx-10]=0;
											output.b[midy-12][midx-10]=0;
											output.r[midy-13][midx-3]=val;
											output.g[midy-13][midx-3]=0;
											output.b[midy-13][midx-3]=0;
											output.r[midy-13][midx-4]=val;
											output.g[midy-13][midx-4]=0;
											output.b[midy-13][midx-4]=0;
											output.r[midy-13][midx-8]=val;
											output.g[midy-13][midx-8]=0;
											output.b[midy-13][midx-8]=0;
											output.r[midy-13][midx-9]=val;
											output.g[midy-13][midx-9]=0;
											output.b[midy-13][midx-9]=0;
											output.r[midy-14][midx-3]=val;
											output.g[midy-14][midx-3]=0;
											output.b[midy-14][midx-3]=0;
											output.r[midy-14][midx-4]=val;
											output.g[midy-14][midx-4]=0;
											output.b[midy-14][midx-4]=0;
											output.r[midy-14][midx-5]=val;
											output.g[midy-14][midx-5]=0;
											output.b[midy-14][midx-5]=0;
											output.r[midy-14][midx-7]=val;
											output.g[midy-14][midx-7]=0;
											output.b[midy-14][midx-7]=0;
											output.r[midy-14][midx-8]=val;
											output.g[midy-14][midx-8]=0;
											output.b[midy-14][midx-8]=0;
											output.r[midy-14][midx-9]=val;
											output.g[midy-14][midx-9]=0;
											output.b[midy-14][midx-9]=0;
											output.r[midy-15][midx-4]=val;
											output.g[midy-15][midx-4]=0;
											output.b[midy-15][midx-4]=0;
											output.r[midy-15][midx-5]=val;
											output.g[midy-15][midx-5]=0;
											output.b[midy-15][midx-5]=0;
											output.r[midy-15][midx-6]=val;
											output.g[midy-15][midx-6]=0;
											output.b[midy-15][midx-6]=0;
											output.r[midy-15][midx-7]=val;
											output.g[midy-15][midx-7]=0;
											output.b[midy-15][midx-7]=0;
											output.r[midy-15][midx-8]=val;
											output.g[midy-15][midx-8]=0;
											output.b[midy-15][midx-8]=0;
										}

										// Output 1
										if(writenum==1){

											output.r[midy-4][midx-2]=val;
											output.g[midy-4][midx-2]=0;
											output.b[midy-4][midx-2]=0;
											output.r[midy-4][midx-3]=val;
											output.g[midy-4][midx-3]=0;
											output.b[midy-4][midx-3]=0;
											output.r[midy-5][midx-2]=val;
											output.g[midy-5][midx-2]=0;
											output.b[midy-5][midx-2]=0;
											output.r[midy-5][midx-3]=val;
											output.g[midy-5][midx-3]=0;
											output.b[midy-5][midx-3]=0;
											output.r[midy-6][midx-2]=val;
											output.g[midy-6][midx-2]=0;
											output.b[midy-6][midx-2]=0;
											output.r[midy-6][midx-3]=val;
											output.g[midy-6][midx-3]=0;
											output.b[midy-6][midx-3]=0;
											output.r[midy-7][midx-2]=val;
											output.g[midy-7][midx-2]=0;
											output.b[midy-7][midx-2]=0;
											output.r[midy-7][midx-3]=val;
											output.g[midy-7][midx-3]=0;
											output.b[midy-7][midx-3]=0;
											output.r[midy-8][midx-2]=val;
											output.g[midy-8][midx-2]=0;
											output.b[midy-8][midx-2]=0;
											output.r[midy-8][midx-3]=val;
											output.g[midy-8][midx-3]=0;
											output.b[midy-8][midx-3]=0;
											output.r[midy-9][midx-2]=val;
											output.g[midy-9][midx-2]=0;
											output.b[midy-9][midx-2]=0;
											output.r[midy-9][midx-3]=val;
											output.g[midy-9][midx-3]=0;
											output.b[midy-9][midx-3]=0;
											output.r[midy-10][midx-2]=val;
											output.g[midy-10][midx-2]=0;
											output.b[midy-10][midx-2]=0;
											output.r[midy-10][midx-3]=val;
											output.g[midy-10][midx-3]=0;
											output.b[midy-10][midx-3]=0;
											output.r[midy-11][midx-2]=val;
											output.g[midy-11][midx-2]=0;
											output.b[midy-11][midx-2]=0;
											output.r[midy-11][midx-3]=val;
											output.g[midy-11][midx-3]=0;
											output.b[midy-11][midx-3]=0;
											output.r[midy-12][midx-2]=val;
											output.g[midy-12][midx-2]=0;
											output.b[midy-12][midx-2]=0;
											output.r[midy-12][midx-3]=val;
											output.g[midy-12][midx-3]=0;
											output.b[midy-12][midx-3]=0;
											output.r[midy-12][midx-4]=val;
											output.g[midy-12][midx-4]=0;
											output.b[midy-12][midx-4]=0;
											output.r[midy-12][midx-5]=val;
											output.g[midy-12][midx-5]=0;
											output.b[midy-12][midx-5]=0;
											output.r[midy-12][midx-6]=val;
											output.g[midy-12][midx-6]=0;
											output.b[midy-12][midx-6]=0;
											output.r[midy-13][midx-2]=val;
											output.g[midy-13][midx-2]=0;
											output.b[midy-13][midx-2]=0;
											output.r[midy-13][midx-3]=val;
											output.g[midy-13][midx-3]=0;
											output.b[midy-13][midx-3]=0;
											output.r[midy-13][midx-4]=val;
											output.g[midy-13][midx-4]=0;
											output.b[midy-13][midx-4]=0;
											output.r[midy-13][midx-5]=val;
											output.g[midy-13][midx-5]=0;
											output.b[midy-13][midx-5]=0;
											output.r[midy-14][midx-2]=val;
											output.g[midy-14][midx-2]=0;
											output.b[midy-14][midx-2]=0;
											output.r[midy-14][midx-3]=val;
											output.g[midy-14][midx-3]=0;
											output.b[midy-14][midx-3]=0;
											output.r[midy-14][midx-4]=val;
											output.g[midy-14][midx-4]=0;
											output.b[midy-14][midx-4]=0;
											output.r[midy-15][midx-2]=val;
											output.g[midy-15][midx-2]=0;
											output.b[midy-15][midx-2]=0;
											output.r[midy-15][midx-3]=val;
											output.g[midy-15][midx-3]=0;
											output.b[midy-15][midx-3]=0;

										}

										// Output 2
										if(writenum==2)
										{

											output.r[midy-4][midx-2]=val;
											output.g[midy-4][midx-2]=0;
											output.b[midy-4][midx-2]=0;
											output.r[midy-4][midx-3]=val;
											output.g[midy-4][midx-3]=0;
											output.b[midy-4][midx-3]=0;
											output.r[midy-4][midx-4]=val;
											output.g[midy-4][midx-4]=0;
											output.b[midy-4][midx-4]=0;
											output.r[midy-4][midx-5]=val;
											output.g[midy-4][midx-5]=0;
											output.b[midy-4][midx-5]=0;
											output.r[midy-4][midx-6]=val;
											output.g[midy-4][midx-6]=0;
											output.b[midy-4][midx-6]=0;
											output.r[midy-4][midx-7]=val;
											output.g[midy-4][midx-7]=0;
											output.b[midy-4][midx-7]=0;
											output.r[midy-4][midx-8]=val;
											output.g[midy-4][midx-8]=0;
											output.b[midy-4][midx-8]=0;
											output.r[midy-4][midx-9]=val;
											output.g[midy-4][midx-9]=0;
											output.b[midy-4][midx-9]=0;
											output.r[midy-5][midx-7]=val;
											output.g[midy-5][midx-7]=0;
											output.b[midy-5][midx-7]=0;
											output.r[midy-5][midx-8]=val;
											output.g[midy-5][midx-8]=0;
											output.b[midy-5][midx-8]=0;
											output.r[midy-5][midx-9]=val;
											output.g[midy-5][midx-9]=0;
											output.b[midy-5][midx-9]=0;
											output.r[midy-6][midx-6]=val;
											output.g[midy-6][midx-6]=0;
											output.b[midy-6][midx-6]=0;
											output.r[midy-6][midx-7]=val;
											output.g[midy-6][midx-7]=0;
											output.b[midy-6][midx-7]=0;
											output.r[midy-6][midx-8]=val;
											output.g[midy-6][midx-8]=0;
											output.b[midy-6][midx-8]=0;
											output.r[midy-7][midx-5]=val;
											output.g[midy-7][midx-5]=0;
											output.b[midy-7][midx-5]=0;
											output.r[midy-7][midx-6]=val;
											output.g[midy-7][midx-6]=0;
											output.b[midy-7][midx-6]=0;
											output.r[midy-7][midx-7]=val;
											output.g[midy-7][midx-7]=0;
											output.b[midy-7][midx-7]=0;
											output.r[midy-8][midx-4]=val;
											output.g[midy-8][midx-4]=0;
											output.b[midy-8][midx-4]=0;
											output.r[midy-8][midx-5]=val;
											output.g[midy-8][midx-5]=0;
											output.b[midy-8][midx-5]=0;
											output.r[midy-8][midx-6]=val;
											output.g[midy-8][midx-6]=0;
											output.b[midy-8][midx-6]=0;
											output.r[midy-9][midx-3]=val;
											output.g[midy-9][midx-3]=0;
											output.b[midy-9][midx-3]=0;
											output.r[midy-9][midx-4]=val;
											output.g[midy-9][midx-4]=0;
											output.b[midy-9][midx-4]=0;
											output.r[midy-9][midx-5]=val;
											output.g[midy-9][midx-5]=0;
											output.b[midy-9][midx-5]=0;
											output.r[midy-10][midx-2]=val;
											output.g[midy-10][midx-2]=0;
											output.b[midy-10][midx-2]=0;
											output.r[midy-10][midx-3]=val;
											output.g[midy-10][midx-3]=0;
											output.b[midy-10][midx-3]=0;
											output.r[midy-10][midx-4]=val;
											output.g[midy-10][midx-4]=0;
											output.b[midy-10][midx-4]=0;
											output.r[midy-11][midx-2]=val;
											output.g[midy-11][midx-2]=0;
											output.b[midy-11][midx-2]=0;
											output.r[midy-11][midx-3]=val;
											output.g[midy-11][midx-3]=0;
											output.b[midy-11][midx-3]=0;
											output.r[midy-12][midx-2]=val;
											output.g[midy-12][midx-2]=0;
											output.b[midy-12][midx-2]=0;
											output.r[midy-12][midx-3]=val;
											output.g[midy-12][midx-3]=0;
											output.b[midy-12][midx-3]=0;
											output.r[midy-13][midx-2]=val;
											output.g[midy-13][midx-2]=0;
											output.b[midy-13][midx-2]=0;
											output.r[midy-13][midx-3]=val;
											output.g[midy-13][midx-3]=0;
											output.b[midy-13][midx-3]=0;
											output.r[midy-13][midx-8]=val;
											output.g[midy-13][midx-8]=0;
											output.b[midy-13][midx-8]=0;
											output.r[midy-13][midx-9]=val;
											output.g[midy-13][midx-9]=0;
											output.b[midy-13][midx-9]=0;
											output.r[midy-14][midx-2]=val;
											output.g[midy-14][midx-2]=0;
											output.b[midy-14][midx-2]=0;
											output.r[midy-14][midx-3]=val;
											output.g[midy-14][midx-3]=0;
											output.b[midy-14][midx-3]=0;
											output.r[midy-14][midx-4]=val;
											output.g[midy-14][midx-4]=0;
											output.b[midy-14][midx-4]=0;
											output.r[midy-14][midx-7]=val;
											output.g[midy-14][midx-7]=0;
											output.b[midy-14][midx-7]=0;
											output.r[midy-14][midx-8]=val;
											output.g[midy-14][midx-8]=0;
											output.b[midy-14][midx-8]=0;
											output.r[midy-14][midx-9]=val;
											output.g[midy-14][midx-9]=0;
											output.b[midy-14][midx-9]=0;
											output.r[midy-15][midx-3]=val;
											output.g[midy-15][midx-3]=0;
											output.b[midy-15][midx-3]=0;
											output.r[midy-15][midx-4]=val;
											output.g[midy-15][midx-4]=0;
											output.b[midy-15][midx-4]=0;
											output.r[midy-15][midx-5]=val;
											output.g[midy-15][midx-5]=0;
											output.b[midy-15][midx-5]=0;
											output.r[midy-15][midx-6]=val;
											output.g[midy-15][midx-6]=0;
											output.b[midy-15][midx-6]=0;
											output.r[midy-15][midx-7]=val;
											output.g[midy-15][midx-7]=0;
											output.b[midy-15][midx-7]=0;
											output.r[midy-15][midx-8]=val;
											output.g[midy-15][midx-8]=0;
											output.b[midy-15][midx-8]=0;

							


										}

										// Output 3
										if(writenum==3)
										{

											output.r[midy-4][midx-4]=val;
											output.g[midy-4][midx-4]=0;
											output.b[midy-4][midx-4]=0;
											output.r[midy-4][midx-5]=val;
											output.g[midy-4][midx-5]=0;
											output.b[midy-4][midx-5]=0;
											output.r[midy-4][midx-6]=val;
											output.g[midy-4][midx-6]=0;
											output.b[midy-4][midx-6]=0;
											output.r[midy-4][midx-7]=val;
											output.g[midy-4][midx-7]=0;
											output.b[midy-4][midx-7]=0;
											output.r[midy-5][midx-3]=val;
											output.g[midy-5][midx-3]=0;
											output.b[midy-5][midx-3]=0;
											output.r[midy-5][midx-7]=val;
											output.g[midy-5][midx-7]=0;
											output.b[midy-5][midx-7]=0;
											output.r[midy-5][midx-8]=val;
											output.g[midy-5][midx-8]=0;
											output.b[midy-5][midx-8]=0;
											output.r[midy-6][midx-2]=val;
											output.g[midy-6][midx-2]=0;
											output.b[midy-6][midx-2]=0;
											output.r[midy-6][midx-3]=val;
											output.g[midy-6][midx-3]=0;
											output.b[midy-6][midx-3]=0;
											output.r[midy-6][midx-8]=val;
											output.g[midy-6][midx-8]=0;
											output.b[midy-6][midx-8]=0;
											output.r[midy-6][midx-9]=val;
											output.g[midy-6][midx-9]=0;
											output.b[midy-6][midx-9]=0;
											output.r[midy-7][midx-2]=val;
											output.g[midy-7][midx-2]=0;
											output.b[midy-7][midx-2]=0;
											output.r[midy-7][midx-3]=val;
											output.g[midy-7][midx-3]=0;
											output.b[midy-7][midx-3]=0;
											output.r[midy-8][midx-2]=val;
											output.g[midy-8][midx-2]=0;
											output.b[midy-8][midx-2]=0;
											output.r[midy-8][midx-3]=val;
											output.g[midy-8][midx-3]=0;
											output.b[midy-8][midx-3]=0;
											output.r[midy-9][midx-2]=val;
											output.g[midy-9][midx-2]=0;
											output.b[midy-9][midx-2]=0;
											output.r[midy-9][midx-3]=val;
											output.g[midy-9][midx-3]=0;
											output.b[midy-9][midx-3]=0;
											output.r[midy-9][midx-4]=val;
											output.g[midy-9][midx-4]=0;
											output.b[midy-9][midx-4]=0;
											output.r[midy-10][midx-4]=val;
											output.g[midy-10][midx-4]=0;
											output.b[midy-10][midx-4]=0;
											output.r[midy-10][midx-5]=val;
											output.g[midy-10][midx-5]=0;
											output.b[midy-10][midx-5]=0;
											output.r[midy-10][midx-6]=val;
											output.g[midy-10][midx-6]=0;
											output.b[midy-10][midx-6]=0;
											output.r[midy-11][midx-3]=val;
											output.g[midy-11][midx-3]=0;
											output.b[midy-11][midx-3]=0;
											output.r[midy-11][midx-4]=val;
											output.g[midy-11][midx-4]=0;
											output.b[midy-11][midx-4]=0;
											output.r[midy-12][midx-2]=val;
											output.g[midy-12][midx-2]=0;
											output.b[midy-12][midx-2]=0;
											output.r[midy-12][midx-3]=val;
											output.g[midy-12][midx-3]=0;
											output.b[midy-12][midx-3]=0;
											output.r[midy-12][midx-4]=val;
											output.g[midy-12][midx-4]=0;
											output.b[midy-12][midx-4]=0;
											output.r[midy-13][midx-2]=val;
											output.g[midy-13][midx-2]=0;
											output.b[midy-13][midx-2]=0;
											output.r[midy-13][midx-3]=val;
											output.g[midy-13][midx-3]=0;
											output.b[midy-13][midx-3]=0;
											output.r[midy-13][midx-4]=val;
											output.g[midy-13][midx-4]=0;
											output.b[midy-13][midx-4]=0;
											output.r[midy-13][midx-7]=val;
											output.g[midy-13][midx-7]=0;
											output.b[midy-13][midx-7]=0;
											output.r[midy-13][midx-8]=val;
											output.g[midy-13][midx-8]=0;
											output.b[midy-13][midx-8]=0;
											output.r[midy-14][midx-3]=val;
											output.g[midy-14][midx-3]=0;
											output.b[midy-14][midx-3]=0;
											output.r[midy-14][midx-4]=val;
											output.g[midy-14][midx-4]=0;
											output.b[midy-14][midx-4]=0;
											output.r[midy-14][midx-7]=val;
											output.g[midy-14][midx-7]=0;
											output.b[midy-14][midx-7]=0;
											output.r[midy-14][midx-8]=val;
											output.g[midy-14][midx-8]=0;
											output.b[midy-14][midx-8]=0;
											output.r[midy-15][midx-4]=val;
											output.g[midy-15][midx-4]=0;
											output.b[midy-15][midx-4]=0;
											output.r[midy-15][midx-5]=val;
											output.g[midy-15][midx-5]=0;
											output.b[midy-15][midx-5]=0;
											output.r[midy-15][midx-6]=val;
											output.g[midy-15][midx-6]=0;
											output.b[midy-15][midx-6]=0;
											output.r[midy-15][midx-7]=val;
											output.g[midy-15][midx-7]=0;
											output.b[midy-15][midx-7]=0;

										}

										// Output 4
										if(writenum==4)
										{
											
											output.r[midy-4][midx-3]=val;
											output.g[midy-4][midx-3]=0;
											output.b[midy-4][midx-3]=0;
											output.r[midy-4][midx-4]=val;
											output.g[midy-4][midx-4]=0;
											output.b[midy-4][midx-4]=0;
											output.r[midy-5][midx-3]=val;
											output.g[midy-5][midx-3]=0;
											output.b[midy-5][midx-3]=0;
											output.r[midy-5][midx-4]=val;
											output.g[midy-5][midx-4]=0;
											output.b[midy-5][midx-4]=0;
											output.r[midy-6][midx-3]=val;
											output.g[midy-6][midx-3]=0;
											output.b[midy-6][midx-3]=0;
											output.r[midy-6][midx-4]=val;
											output.g[midy-6][midx-4]=0;
											output.b[midy-6][midx-4]=0;
											output.r[midy-7][midx-2]=val;
											output.g[midy-7][midx-2]=0;
											output.b[midy-7][midx-2]=0;
											output.r[midy-7][midx-3]=val;
											output.g[midy-7][midx-3]=0;
											output.b[midy-7][midx-3]=0;
											output.r[midy-7][midx-4]=val;
											output.g[midy-7][midx-4]=0;
											output.b[midy-7][midx-4]=0;
											output.r[midy-7][midx-5]=val;
											output.g[midy-7][midx-5]=0;
											output.b[midy-7][midx-5]=0;
											output.r[midy-7][midx-6]=val;
											output.g[midy-7][midx-6]=0;
											output.b[midy-7][midx-6]=0;
											output.r[midy-7][midx-7]=val;
											output.g[midy-7][midx-7]=0;
											output.b[midy-7][midx-7]=0;
											output.r[midy-7][midx-8]=val;
											output.g[midy-7][midx-8]=0;
											output.b[midy-7][midx-8]=0;
											output.r[midy-7][midx-9]=val;
											output.g[midy-7][midx-9]=0;
											output.b[midy-7][midx-9]=0;
											output.r[midy-8][midx-3]=val;
											output.g[midy-8][midx-3]=0;
											output.b[midy-8][midx-3]=0;
											output.r[midy-8][midx-4]=val;
											output.g[midy-8][midx-4]=0;
											output.b[midy-8][midx-4]=0;
											output.r[midy-8][midx-8]=val;
											output.g[midy-8][midx-8]=0;
											output.b[midy-8][midx-8]=0;
											output.r[midy-8][midx-9]=val;
											output.g[midy-8][midx-9]=0;
											output.b[midy-8][midx-9]=0;
											output.r[midy-9][midx-3]=val;
											output.g[midy-9][midx-3]=0;
											output.b[midy-9][midx-3]=0;
											output.r[midy-9][midx-4]=val;
											output.g[midy-9][midx-4]=0;
											output.b[midy-9][midx-4]=0;
											output.r[midy-9][midx-7]=val;
											output.g[midy-9][midx-7]=0;
											output.b[midy-9][midx-7]=0;
											output.r[midy-9][midx-8]=val;
											output.g[midy-9][midx-8]=0;
											output.b[midy-9][midx-8]=0;
											output.r[midy-10][midx-3]=val;
											output.g[midy-10][midx-3]=0;
											output.b[midy-10][midx-3]=0;
											output.r[midy-10][midx-4]=val;
											output.g[midy-10][midx-4]=0;
											output.b[midy-10][midx-4]=0;
											output.r[midy-10][midx-7]=val;
											output.g[midy-10][midx-7]=0;
											output.b[midy-10][midx-7]=0;
											output.r[midy-11][midx-3]=val;
											output.g[midy-11][midx-3]=0;
											output.b[midy-11][midx-3]=0;
											output.r[midy-11][midx-4]=val;
											output.g[midy-11][midx-4]=0;
											output.b[midy-11][midx-4]=0;
											output.r[midy-11][midx-6]=val;
											output.g[midy-11][midx-6]=0;
											output.b[midy-11][midx-6]=0;
											output.r[midy-11][midx-7]=val;
											output.g[midy-11][midx-7]=0;
											output.b[midy-11][midx-7]=0;
											output.r[midy-12][midx-3]=val;
											output.g[midy-12][midx-3]=0;
											output.b[midy-12][midx-3]=0;
											output.r[midy-12][midx-4]=val;
											output.g[midy-12][midx-4]=0;
											output.b[midy-12][midx-4]=0;
											output.r[midy-12][midx-5]=val;
											output.g[midy-12][midx-5]=0;
											output.b[midy-12][midx-5]=0;
											output.r[midy-12][midx-6]=val;
											output.g[midy-12][midx-6]=0;
											output.b[midy-12][midx-6]=0;
											output.r[midy-13][midx-3]=val;
											output.g[midy-13][midx-3]=0;
											output.b[midy-13][midx-3]=0;
											output.r[midy-13][midx-4]=val;
											output.g[midy-13][midx-4]=0;
											output.b[midy-13][midx-4]=0;
											output.r[midy-13][midx-5]=val;
											output.g[midy-13][midx-5]=0;
											output.b[midy-13][midx-5]=0;
											output.r[midy-13][midx-6]=val;
											output.g[midy-13][midx-6]=0;
											output.b[midy-13][midx-6]=0;
											output.r[midy-14][midx-3]=val;
											output.g[midy-14][midx-3]=0;
											output.b[midy-14][midx-3]=0;
											output.r[midy-14][midx-4]=val;
											output.g[midy-14][midx-4]=0;
											output.b[midy-14][midx-4]=0;
											output.r[midy-14][midx-5]=val;
											output.g[midy-14][midx-5]=0;
											output.b[midy-14][midx-5]=0;
											output.r[midy-15][midx-3]=val;
											output.g[midy-15][midx-3]=0;
											output.b[midy-15][midx-3]=0;
											output.r[midy-15][midx-4]=val;
											output.g[midy-15][midx-4]=0;
											output.b[midy-15][midx-4]=0;


										}

										// Output 5
										if(writenum==5)
										{

											output.r[midy-4][midx-3]=val;
											output.g[midy-4][midx-3]=0;
											output.b[midy-4][midx-3]=0;
											output.r[midy-4][midx-4]=val;
											output.g[midy-4][midx-4]=0;
											output.b[midy-4][midx-4]=0;
											output.r[midy-4][midx-5]=val;
											output.g[midy-4][midx-5]=0;
											output.b[midy-4][midx-5]=0;
											output.r[midy-4][midx-6]=val;
											output.g[midy-4][midx-6]=0;
											output.b[midy-4][midx-6]=0;
											output.r[midy-4][midx-7]=val;
											output.g[midy-4][midx-7]=0;
											output.b[midy-4][midx-7]=0;
											output.r[midy-5][midx-2]=val;
											output.g[midy-5][midx-2]=0;
											output.b[midy-5][midx-2]=0;
											output.r[midy-5][midx-3]=val;
											output.g[midy-5][midx-3]=0;
											output.b[midy-5][midx-3]=0;
											output.r[midy-5][midx-7]=val;
											output.g[midy-5][midx-7]=0;
											output.b[midy-5][midx-7]=0;
											output.r[midy-5][midx-8]=val;
											output.g[midy-5][midx-8]=0;
											output.b[midy-5][midx-8]=0;
											output.r[midy-6][midx-2]=val;
											output.g[midy-6][midx-2]=0;
											output.b[midy-6][midx-2]=0;
											output.r[midy-6][midx-3]=val;
											output.g[midy-6][midx-3]=0;
											output.b[midy-6][midx-3]=0;
											output.r[midy-6][midx-7]=val;
											output.g[midy-6][midx-7]=0;
											output.b[midy-6][midx-7]=0;
											output.r[midy-6][midx-8]=val;
											output.g[midy-6][midx-8]=0;
											output.b[midy-6][midx-8]=0;
											output.r[midy-7][midx-2]=val;
											output.g[midy-7][midx-2]=0;
											output.b[midy-7][midx-2]=0;
											output.r[midy-7][midx-3]=val;
											output.g[midy-7][midx-3]=0;
											output.b[midy-7][midx-3]=0;
											output.r[midy-8][midx-2]=val;
											output.g[midy-8][midx-2]=0;
											output.b[midy-8][midx-2]=0;
											output.r[midy-8][midx-3]=val;
											output.g[midy-8][midx-3]=0;
											output.b[midy-8][midx-3]=0;
											output.r[midy-9][midx-2]=val;
											output.g[midy-9][midx-2]=0;
											output.b[midy-9][midx-2]=0;
											output.r[midy-9][midx-3]=val;
											output.g[midy-9][midx-3]=0;
											output.b[midy-9][midx-3]=0;
											output.r[midy-10][midx-2]=val;
											output.g[midy-10][midx-2]=0;
											output.b[midy-10][midx-2]=0;
											output.r[midy-10][midx-3]=val;
											output.g[midy-10][midx-3]=0;
											output.b[midy-10][midx-3]=0;
											output.r[midy-10][midx-7]=val;
											output.g[midy-10][midx-7]=0;
											output.b[midy-10][midx-7]=0;
											output.r[midy-10][midx-8]=val;
											output.g[midy-10][midx-8]=0;
											output.b[midy-10][midx-8]=0;
											output.r[midy-11][midx-3]=val;
											output.g[midy-11][midx-3]=0;
											output.b[midy-11][midx-3]=0;
											output.r[midy-11][midx-4]=val;
											output.g[midy-11][midx-4]=0;
											output.b[midy-11][midx-4]=0;
											output.r[midy-11][midx-5]=val;
											output.g[midy-11][midx-5]=0;
											output.b[midy-11][midx-5]=0;
											output.r[midy-11][midx-6]=val;
											output.g[midy-11][midx-6]=0;
											output.b[midy-11][midx-6]=0;
											output.r[midy-11][midx-7]=val;
											output.g[midy-11][midx-7]=0;
											output.b[midy-11][midx-7]=0;
											output.r[midy-11][midx-8]=val;
											output.g[midy-11][midx-8]=0;
											output.b[midy-11][midx-8]=0;
											output.r[midy-12][midx-7]=val;
											output.g[midy-12][midx-7]=0;
											output.b[midy-12][midx-7]=0;
											output.r[midy-12][midx-8]=val;
											output.g[midy-12][midx-8]=0;
											output.b[midy-12][midx-8]=0;
											output.r[midy-13][midx-7]=val;
											output.g[midy-13][midx-7]=0;
											output.b[midy-13][midx-7]=0;
											output.r[midy-13][midx-8]=val;
											output.g[midy-13][midx-8]=0;
											output.b[midy-13][midx-8]=0;
											output.r[midy-14][midx-7]=val;
											output.g[midy-14][midx-7]=0;
											output.b[midy-14][midx-7]=0;
											output.r[midy-14][midx-8]=val;
											output.g[midy-14][midx-8]=0;
											output.b[midy-14][midx-8]=0;
											output.r[midy-15][midx-2]=val;
											output.g[midy-15][midx-2]=0;
											output.b[midy-15][midx-2]=0;
											output.r[midy-15][midx-3]=val;
											output.g[midy-15][midx-3]=0;
											output.b[midy-15][midx-3]=0;
											output.r[midy-15][midx-4]=val;
											output.g[midy-15][midx-4]=0;
											output.b[midy-15][midx-4]=0;
											output.r[midy-15][midx-5]=val;
											output.g[midy-15][midx-5]=0;
											output.b[midy-15][midx-5]=0;
											output.r[midy-15][midx-6]=val;
											output.g[midy-15][midx-6]=0;
											output.b[midy-15][midx-6]=0;
											output.r[midy-15][midx-7]=val;
											output.g[midy-15][midx-7]=0;
											output.b[midy-15][midx-7]=0;
											output.r[midy-15][midx-8]=val;
											output.g[midy-15][midx-8]=0;
											output.b[midy-15][midx-8]=0;



										}

										// Output 6
										if(writenum==6)
										{

											output.r[midy-4][midx-4]=val;
											output.g[midy-4][midx-4]=0;
											output.b[midy-4][midx-4]=0;
											output.r[midy-4][midx-5]=val;
											output.g[midy-4][midx-5]=0;
											output.b[midy-4][midx-5]=0;
											output.r[midy-4][midx-6]=val;
											output.g[midy-4][midx-6]=0;
											output.b[midy-4][midx-6]=0;
											output.r[midy-4][midx-7]=val;
											output.g[midy-4][midx-7]=0;
											output.b[midy-4][midx-7]=0;
											output.r[midy-4][midx-8]=val;
											output.g[midy-4][midx-8]=0;
											output.b[midy-4][midx-8]=0;
											output.r[midy-5][midx-3]=val;
											output.g[midy-5][midx-3]=0;
											output.b[midy-5][midx-3]=0;
											output.r[midy-5][midx-4]=val;
											output.g[midy-5][midx-4]=0;
											output.b[midy-5][midx-4]=0;
											output.r[midy-5][midx-8]=val;
											output.g[midy-5][midx-8]=0;
											output.b[midy-5][midx-8]=0;
											output.r[midy-5][midx-9]=val;
											output.g[midy-5][midx-9]=0;
											output.b[midy-5][midx-9]=0;
											output.r[midy-6][midx-2]=val;
											output.g[midy-6][midx-2]=0;
											output.b[midy-6][midx-2]=0;
											output.r[midy-6][midx-3]=val;
											output.g[midy-6][midx-3]=0;
											output.b[midy-6][midx-3]=0;
											output.r[midy-6][midx-4]=val;
											output.g[midy-6][midx-4]=0;
											output.b[midy-6][midx-4]=0;
											output.r[midy-6][midx-8]=val;
											output.g[midy-6][midx-8]=0;
											output.b[midy-6][midx-8]=0;
											output.r[midy-6][midx-9]=val;
											output.g[midy-6][midx-9]=0;
											output.b[midy-6][midx-9]=0;
											output.r[midy-6][midx-10]=val;
											output.g[midy-6][midx-10]=0;
											output.b[midy-6][midx-10]=0;
											output.r[midy-7][midx-2]=val;
											output.g[midy-7][midx-2]=0;
											output.b[midy-7][midx-2]=0;
											output.r[midy-7][midx-3]=val;
											output.g[midy-7][midx-3]=0;
											output.b[midy-7][midx-3]=0;
											output.r[midy-7][midx-4]=val;
											output.g[midy-7][midx-4]=0;
											output.b[midy-7][midx-4]=0;
											output.r[midy-7][midx-9]=val;
											output.g[midy-7][midx-9]=0;
											output.b[midy-7][midx-9]=0;
											output.r[midy-7][midx-10]=val;
											output.g[midy-7][midx-10]=0;
											output.b[midy-7][midx-10]=0;
											output.r[midy-8][midx-2]=val;
											output.g[midy-8][midx-2]=0;
											output.b[midy-8][midx-2]=0;
											output.r[midy-8][midx-3]=val;
											output.g[midy-8][midx-3]=0;
											output.b[midy-8][midx-3]=0;
											output.r[midy-8][midx-4]=val;
											output.g[midy-8][midx-4]=0;
											output.b[midy-8][midx-4]=0;
											output.r[midy-8][midx-9]=val;
											output.g[midy-8][midx-9]=0;
											output.b[midy-8][midx-9]=0;
											output.r[midy-8][midx-10]=val;
											output.g[midy-8][midx-10]=0;
											output.b[midy-8][midx-10]=0;
											output.r[midy-9][midx-2]=val;
											output.g[midy-9][midx-2]=0;
											output.b[midy-9][midx-2]=0;
											output.r[midy-9][midx-3]=val;
											output.g[midy-9][midx-3]=0;
											output.b[midy-9][midx-3]=0;
											output.r[midy-9][midx-4]=val;
											output.g[midy-9][midx-4]=0;
											output.b[midy-9][midx-4]=0;
											output.r[midy-9][midx-8]=val;
											output.g[midy-9][midx-8]=0;
											output.b[midy-9][midx-8]=0;
											output.r[midy-9][midx-9]=val;
											output.g[midy-9][midx-9]=0;
											output.b[midy-9][midx-9]=0;
											output.r[midy-9][midx-10]=val;
											output.g[midy-9][midx-10]=0;
											output.b[midy-9][midx-10]=0;
											output.r[midy-10][midx-3]=val;
											output.g[midy-10][midx-3]=0;
											output.b[midy-10][midx-3]=0;
											output.r[midy-10][midx-4]=val;
											output.g[midy-10][midx-4]=0;
											output.b[midy-10][midx-4]=0;
											output.r[midy-10][midx-8]=val;
											output.g[midy-10][midx-8]=0;
											output.b[midy-10][midx-8]=0;
											output.r[midy-10][midx-9]=val;
											output.g[midy-10][midx-9]=0;
											output.b[midy-10][midx-9]=0;
											output.r[midy-10][midx-10]=val;
											output.g[midy-10][midx-10]=0;
											output.b[midy-10][midx-10]=0;
											output.r[midy-11][midx-4]=val;
											output.g[midy-11][midx-4]=0;
											output.b[midy-11][midx-4]=0;
											output.r[midy-11][midx-5]=val;
											output.g[midy-11][midx-5]=0;
											output.b[midy-11][midx-5]=0;
											output.r[midy-11][midx-6]=val;
											output.g[midy-11][midx-6]=0;
											output.b[midy-11][midx-6]=0;
											output.r[midy-11][midx-7]=val;
											output.g[midy-11][midx-7]=0;
											output.b[midy-11][midx-7]=0;
											output.r[midy-11][midx-8]=val;
											output.g[midy-11][midx-8]=0;
											output.b[midy-11][midx-8]=0;
											output.r[midy-11][midx-9]=val;
											output.g[midy-11][midx-9]=0;
											output.b[midy-11][midx-9]=0;
											output.r[midy-11][midx-10]=val;
											output.g[midy-11][midx-10]=0;
											output.b[midy-11][midx-10]=0;
											output.r[midy-12][midx-9]=val;
											output.g[midy-12][midx-9]=0;
											output.b[midy-12][midx-9]=0;
											output.r[midy-12][midx-10]=val;
											output.g[midy-12][midx-10]=0;
											output.b[midy-12][midx-10]=0;
											output.r[midy-13][midx-3]=val;
											output.g[midy-13][midx-3]=0;
											output.b[midy-13][midx-3]=0;
											output.r[midy-13][midx-4]=val;
											output.g[midy-13][midx-4]=0;
											output.b[midy-13][midx-4]=0;
											output.r[midy-13][midx-8]=val;
											output.g[midy-13][midx-8]=0;
											output.b[midy-13][midx-8]=0;
											output.r[midy-13][midx-9]=val;
											output.g[midy-13][midx-9]=0;
											output.b[midy-13][midx-9]=0;
											output.r[midy-14][midx-3]=val;
											output.g[midy-14][midx-3]=0;
											output.b[midy-14][midx-3]=0;
											output.r[midy-14][midx-4]=val;
											output.g[midy-14][midx-4]=0;
											output.b[midy-14][midx-4]=0;
											output.r[midy-14][midx-8]=val;
											output.g[midy-14][midx-8]=0;
											output.b[midy-14][midx-8]=0;
											output.r[midy-14][midx-9]=val;
											output.g[midy-14][midx-9]=0;
											output.b[midy-14][midx-9]=0;
											output.r[midy-15][midx-4]=val;
											output.g[midy-15][midx-4]=0;
											output.b[midy-15][midx-4]=0;
											output.r[midy-15][midx-5]=val;
											output.g[midy-15][midx-5]=0;
											output.b[midy-15][midx-5]=0;
											output.r[midy-15][midx-6]=val;
											output.g[midy-15][midx-6]=0;
											output.b[midy-15][midx-6]=0;
											output.r[midy-15][midx-7]=val;
											output.g[midy-15][midx-7]=0;
											output.b[midy-15][midx-7]=0;
											output.r[midy-15][midx-8]=val;
											output.g[midy-15][midx-8]=0;
											output.b[midy-15][midx-8]=0;



										}

										// Output 7
										if(writenum==7)
										{

											output.r[midy-4][midx-6]=val;
											output.g[midy-4][midx-6]=0;
											output.b[midy-4][midx-6]=0;
											output.r[midy-4][midx-7]=val;
											output.g[midy-4][midx-7]=0;
											output.b[midy-4][midx-7]=0;
											output.r[midy-5][midx-6]=val;
											output.g[midy-5][midx-6]=0;
											output.b[midy-5][midx-6]=0;
											output.r[midy-5][midx-7]=val;
											output.g[midy-5][midx-7]=0;
											output.b[midy-5][midx-7]=0;
											output.r[midy-6][midx-6]=val;
											output.g[midy-6][midx-6]=0;
											output.b[midy-6][midx-6]=0;
											output.r[midy-6][midx-7]=val;
											output.g[midy-6][midx-7]=0;
											output.b[midy-6][midx-7]=0;
											output.r[midy-7][midx-5]=val;
											output.g[midy-7][midx-5]=0;
											output.b[midy-7][midx-5]=0;
											output.r[midy-7][midx-6]=val;
											output.g[midy-7][midx-6]=0;
											output.b[midy-7][midx-6]=0;
											output.r[midy-7][midx-7]=val;
											output.g[midy-7][midx-7]=0;
											output.b[midy-7][midx-7]=0;
											output.r[midy-8][midx-5]=val;
											output.g[midy-8][midx-5]=0;
											output.b[midy-8][midx-5]=0;
											output.r[midy-8][midx-6]=val;
											output.g[midy-8][midx-6]=0;
											output.b[midy-8][midx-6]=0;
											output.r[midy-9][midx-4]=val;
											output.g[midy-9][midx-4]=0;
											output.b[midy-9][midx-4]=0;
											output.r[midy-9][midx-5]=val;
											output.g[midy-9][midx-5]=0;
											output.b[midy-9][midx-5]=0;
											output.r[midy-9][midx-6]=val;
											output.g[midy-9][midx-6]=0;
											output.b[midy-9][midx-6]=0;
											output.r[midy-10][midx-4]=val;
											output.g[midy-10][midx-4]=0;
											output.b[midy-10][midx-4]=0;
											output.r[midy-10][midx-5]=val;
											output.g[midy-10][midx-5]=0;
											output.b[midy-10][midx-5]=0;
											output.r[midy-11][midx-3]=val;
											output.g[midy-11][midx-3]=0;
											output.b[midy-11][midx-3]=0;
											output.r[midy-11][midx-4]=val;
											output.g[midy-11][midx-4]=0;
											output.b[midy-11][midx-4]=0;
											output.r[midy-11][midx-5]=val;
											output.g[midy-11][midx-5]=0;
											output.b[midy-11][midx-5]=0;
											output.r[midy-12][midx-2]=val;
											output.g[midy-12][midx-2]=0;
											output.b[midy-12][midx-2]=0;
											output.r[midy-12][midx-3]=val;
											output.g[midy-12][midx-3]=0;
											output.b[midy-12][midx-3]=0;
											output.r[midy-12][midx-4]=val;
											output.g[midy-12][midx-4]=0;
											output.b[midy-12][midx-4]=0;
											output.r[midy-13][midx-2]=val;
											output.g[midy-13][midx-2]=0;
											output.b[midy-13][midx-2]=0;
											output.r[midy-13][midx-3]=val;
											output.g[midy-13][midx-3]=0;
											output.b[midy-13][midx-3]=0;
											output.r[midy-13][midx-4]=val;
											output.g[midy-13][midx-4]=0;
											output.b[midy-13][midx-4]=0;
											output.r[midy-14][midx-2]=val;
											output.g[midy-14][midx-2]=0;
											output.b[midy-14][midx-2]=0;
											output.r[midy-14][midx-3]=val;
											output.g[midy-14][midx-3]=0;
											output.b[midy-14][midx-3]=0;
											output.r[midy-14][midx-4]=val;
											output.g[midy-14][midx-4]=0;
											output.b[midy-14][midx-4]=0;
											output.r[midy-15][midx-2]=val;
											output.g[midy-15][midx-2]=0;
											output.b[midy-15][midx-2]=0;
											output.r[midy-15][midx-3]=val;
											output.g[midy-15][midx-3]=0;
											output.b[midy-15][midx-3]=0;
											output.r[midy-15][midx-4]=val;
											output.g[midy-15][midx-4]=0;
											output.b[midy-15][midx-4]=0;
											output.r[midy-15][midx-5]=val;
											output.g[midy-15][midx-5]=0;
											output.b[midy-15][midx-5]=0;
											output.r[midy-15][midx-6]=val;
											output.g[midy-15][midx-6]=0;
											output.b[midy-15][midx-6]=0;
											output.r[midy-15][midx-7]=val;
											output.g[midy-15][midx-7]=0;
											output.b[midy-15][midx-7]=0;
											output.r[midy-15][midx-8]=val;
											output.g[midy-15][midx-8]=0;
											output.b[midy-15][midx-8]=0;
											output.r[midy-15][midx-9]=val;
											output.g[midy-15][midx-9]=0;
											output.b[midy-15][midx-9]=0;


										}

										// Output 8
										if(writenum==8)
										{

											output.r[midy-4][midx-4]=val;
											output.g[midy-4][midx-4]=0;
											output.b[midy-4][midx-4]=0;
											output.r[midy-4][midx-5]=val;
											output.g[midy-4][midx-5]=0;
											output.b[midy-4][midx-5]=0;
											output.r[midy-4][midx-6]=val;
											output.g[midy-4][midx-6]=0;
											output.b[midy-4][midx-6]=0;
											output.r[midy-4][midx-7]=val;
											output.g[midy-4][midx-7]=0;
											output.b[midy-4][midx-7]=0;
											output.r[midy-4][midx-8]=val;
											output.g[midy-4][midx-8]=0;
											output.b[midy-4][midx-8]=0;
											output.r[midy-5][midx-3]=val;
											output.g[midy-5][midx-3]=0;
											output.b[midy-5][midx-3]=0;
											output.r[midy-5][midx-4]=val;
											output.g[midy-5][midx-4]=0;
											output.b[midy-5][midx-4]=0;
											output.r[midy-5][midx-5]=val;
											output.g[midy-5][midx-5]=0;
											output.b[midy-5][midx-5]=0;
											output.r[midy-5][midx-7]=val;
											output.g[midy-5][midx-7]=0;
											output.b[midy-5][midx-7]=0;
											output.r[midy-5][midx-8]=val;
											output.g[midy-5][midx-8]=0;
											output.b[midy-5][midx-8]=0;
											output.r[midy-5][midx-9]=val;
											output.g[midy-5][midx-9]=0;
											output.b[midy-5][midx-9]=0;
											output.r[midy-6][midx-2]=val;
											output.g[midy-6][midx-2]=0;
											output.b[midy-6][midx-2]=0;
											output.r[midy-6][midx-3]=val;
											output.g[midy-6][midx-3]=0;
											output.b[midy-6][midx-3]=0;
											output.r[midy-6][midx-4]=val;
											output.g[midy-6][midx-4]=0;
											output.b[midy-6][midx-4]=0;
											output.r[midy-6][midx-8]=val;
											output.g[midy-6][midx-8]=0;
											output.b[midy-6][midx-8]=0;
											output.r[midy-6][midx-9]=val;
											output.g[midy-6][midx-9]=0;
											output.b[midy-6][midx-9]=0;
											output.r[midy-6][midx-10]=val;
											output.g[midy-6][midx-10]=0;
											output.b[midy-6][midx-10]=0;
											output.r[midy-7][midx-2]=val;
											output.g[midy-7][midx-2]=0;
											output.b[midy-7][midx-2]=0;
											output.r[midy-7][midx-3]=val;
											output.g[midy-7][midx-3]=0;
											output.b[midy-7][midx-3]=0;
											output.r[midy-7][midx-4]=val;
											output.g[midy-7][midx-4]=0;
											output.b[midy-7][midx-4]=0;
											output.r[midy-7][midx-8]=val;
											output.g[midy-7][midx-8]=0;
											output.b[midy-7][midx-8]=0;
											output.r[midy-7][midx-9]=val;
											output.g[midy-7][midx-9]=0;
											output.b[midy-7][midx-9]=0;
											output.r[midy-7][midx-10]=val;
											output.g[midy-7][midx-10]=0;
											output.b[midy-7][midx-10]=0;
											output.r[midy-8][midx-2]=val;
											output.g[midy-8][midx-2]=0;
											output.b[midy-8][midx-2]=0;
											output.r[midy-8][midx-3]=val;
											output.g[midy-8][midx-3]=0;
											output.b[midy-8][midx-3]=0;
											output.r[midy-8][midx-4]=val;
											output.g[midy-8][midx-4]=0;
											output.b[midy-8][midx-4]=0;
											output.r[midy-8][midx-8]=val;
											output.g[midy-8][midx-8]=0;
											output.b[midy-8][midx-8]=0;
											output.r[midy-8][midx-9]=val;
											output.g[midy-8][midx-9]=0;
											output.b[midy-8][midx-9]=0;
											output.r[midy-8][midx-10]=val;
											output.g[midy-8][midx-10]=0;
											output.b[midy-8][midx-10]=0;
											output.r[midy-9][midx-3]=val;
											output.g[midy-9][midx-3]=0;
											output.b[midy-9][midx-3]=0;
											output.r[midy-9][midx-4]=val;
											output.g[midy-9][midx-4]=0;
											output.b[midy-9][midx-4]=0;
											output.r[midy-9][midx-5]=val;
											output.g[midy-9][midx-5]=0;
											output.b[midy-9][midx-5]=0;
											output.r[midy-9][midx-7]=val;
											output.g[midy-9][midx-7]=0;
											output.b[midy-9][midx-7]=0;
											output.r[midy-9][midx-8]=val;
											output.g[midy-9][midx-8]=0;
											output.b[midy-9][midx-8]=0;
											output.r[midy-9][midx-9]=val;
											output.g[midy-9][midx-9]=0;
											output.b[midy-9][midx-9]=0;
											output.r[midy-10][midx-5]=val;
											output.g[midy-10][midx-5]=0;
											output.b[midy-10][midx-5]=0;
											output.r[midy-10][midx-6]=val;
											output.g[midy-10][midx-6]=0;
											output.b[midy-10][midx-6]=0;
											output.r[midy-10][midx-7]=val;
											output.g[midy-10][midx-7]=0;
											output.b[midy-10][midx-7]=0;
											output.r[midy-11][midx-3]=val;
											output.g[midy-11][midx-3]=0;
											output.b[midy-11][midx-3]=0;
											output.r[midy-11][midx-4]=val;
											output.g[midy-11][midx-4]=0;
											output.b[midy-11][midx-4]=0;
											output.r[midy-11][midx-5]=val;
											output.g[midy-11][midx-5]=0;
											output.b[midy-11][midx-5]=0;
											output.r[midy-11][midx-7]=val;
											output.g[midy-11][midx-7]=0;
											output.b[midy-11][midx-7]=0;
											output.r[midy-11][midx-8]=val;
											output.g[midy-11][midx-8]=0;
											output.b[midy-11][midx-8]=0;
											output.r[midy-11][midx-9]=val;
											output.g[midy-11][midx-9]=0;
											output.b[midy-11][midx-9]=0;
											output.r[midy-12][midx-2]=val;
											output.g[midy-12][midx-2]=0;
											output.b[midy-12][midx-2]=0;
											output.r[midy-12][midx-3]=val;
											output.g[midy-12][midx-3]=0;
											output.b[midy-12][midx-3]=0;
											output.r[midy-12][midx-4]=val;
											output.g[midy-12][midx-4]=0;
											output.b[midy-12][midx-4]=0;
											output.r[midy-12][midx-8]=val;
											output.g[midy-12][midx-8]=0;
											output.b[midy-12][midx-8]=0;
											output.r[midy-12][midx-9]=val;
											output.g[midy-12][midx-9]=0;
											output.b[midy-12][midx-9]=0;
											output.r[midy-12][midx-10]=val;
											output.g[midy-12][midx-10]=0;
											output.b[midy-12][midx-10]=0;
											output.r[midy-13][midx-2]=val;
											output.g[midy-13][midx-2]=0;
											output.b[midy-13][midx-2]=0;
											output.r[midy-13][midx-3]=val;
											output.g[midy-13][midx-3]=0;
											output.b[midy-13][midx-3]=0;
											output.r[midy-13][midx-4]=val;
											output.g[midy-13][midx-4]=0;
											output.b[midy-13][midx-4]=0;
											output.r[midy-13][midx-8]=val;
											output.g[midy-13][midx-8]=0;
											output.b[midy-13][midx-8]=0;
											output.r[midy-13][midx-9]=val;
											output.g[midy-13][midx-9]=0;
											output.b[midy-13][midx-9]=0;
											output.r[midy-13][midx-10]=val;
											output.g[midy-13][midx-10]=0;
											output.b[midy-13][midx-10]=0;
											output.r[midy-14][midx-3]=val;
											output.g[midy-14][midx-3]=0;
											output.b[midy-14][midx-3]=0;
											output.r[midy-14][midx-4]=val;
											output.g[midy-14][midx-4]=0;
											output.b[midy-14][midx-4]=0;
											output.r[midy-14][midx-5]=val;
											output.g[midy-14][midx-5]=0;
											output.b[midy-14][midx-5]=0;
											output.r[midy-14][midx-7]=val;
											output.g[midy-14][midx-7]=0;
											output.b[midy-14][midx-7]=0;
											output.r[midy-14][midx-8]=val;
											output.g[midy-14][midx-8]=0;
											output.b[midy-14][midx-8]=0;
											output.r[midy-14][midx-9]=val;
											output.g[midy-14][midx-9]=0;
											output.b[midy-14][midx-9]=0;
											output.r[midy-15][midx-4]=val;
											output.g[midy-15][midx-4]=0;
											output.b[midy-15][midx-4]=0;
											output.r[midy-15][midx-5]=val;
											output.g[midy-15][midx-5]=0;
											output.b[midy-15][midx-5]=0;
											output.r[midy-15][midx-6]=val;
											output.g[midy-15][midx-6]=0;
											output.b[midy-15][midx-6]=0;
											output.r[midy-15][midx-7]=val;
											output.g[midy-15][midx-7]=0;
											output.b[midy-15][midx-7]=0;
											output.r[midy-15][midx-8]=val;
											output.g[midy-15][midx-8]=0;
											output.b[midy-15][midx-8]=0;


										}

										// Output 9
										if(writenum==9)
										{

											output.r[midy-4][midx-4]=val;
											output.g[midy-4][midx-4]=0;
											output.b[midy-4][midx-4]=0;
											output.r[midy-4][midx-5]=val;
											output.g[midy-4][midx-5]=0;
											output.b[midy-4][midx-5]=0;
											output.r[midy-4][midx-6]=val;
											output.g[midy-4][midx-6]=0;
											output.b[midy-4][midx-6]=0;
											output.r[midy-4][midx-7]=val;
											output.g[midy-4][midx-7]=0;
											output.b[midy-4][midx-7]=0;
											output.r[midy-4][midx-8]=val;
											output.g[midy-4][midx-8]=0;
											output.b[midy-4][midx-8]=0;
											output.r[midy-4][midx-9]=val;
											output.g[midy-4][midx-9]=0;
											output.b[midy-4][midx-9]=0;
											output.r[midy-5][midx-3]=val;
											output.g[midy-5][midx-3]=0;
											output.b[midy-5][midx-3]=0;
											output.r[midy-5][midx-4]=val;
											output.g[midy-5][midx-4]=0;
											output.b[midy-5][midx-4]=0;
											output.r[midy-5][midx-5]=val;
											output.g[midy-5][midx-5]=0;
											output.b[midy-5][midx-5]=0;
											output.r[midy-5][midx-8]=val;
											output.g[midy-5][midx-8]=0;
											output.b[midy-5][midx-8]=0;
											output.r[midy-5][midx-9]=val;
											output.g[midy-5][midx-9]=0;
											output.b[midy-5][midx-9]=0;
											output.r[midy-5][midx-10]=val;
											output.g[midy-5][midx-10]=0;
											output.b[midy-5][midx-10]=0;
											output.r[midy-6][midx-2]=val;
											output.g[midy-6][midx-2]=0;
											output.b[midy-6][midx-2]=0;
											output.r[midy-6][midx-3]=val;
											output.g[midy-6][midx-3]=0;
											output.b[midy-6][midx-3]=0;
											output.r[midy-6][midx-4]=val;
											output.g[midy-6][midx-4]=0;
											output.b[midy-6][midx-4]=0;
											output.r[midy-7][midx-2]=val;
											output.g[midy-7][midx-2]=0;
											output.b[midy-7][midx-2]=0;
											output.r[midy-7][midx-3]=val;
											output.g[midy-7][midx-3]=0;
											output.b[midy-7][midx-3]=0;
											output.r[midy-7][midx-4]=val;
											output.g[midy-7][midx-4]=0;
											output.b[midy-7][midx-4]=0;
											output.r[midy-8][midx-2]=val;
											output.g[midy-8][midx-2]=0;
											output.b[midy-8][midx-2]=0;
											output.r[midy-8][midx-3]=val;
											output.g[midy-8][midx-3]=0;
											output.b[midy-8][midx-3]=0;
											output.r[midy-8][midx-4]=val;
											output.g[midy-8][midx-4]=0;
											output.b[midy-8][midx-4]=0;
											output.r[midy-8][midx-5]=val;
											output.g[midy-8][midx-5]=0;
											output.b[midy-8][midx-5]=0;
											output.r[midy-8][midx-6]=val;
											output.g[midy-8][midx-6]=0;
											output.b[midy-8][midx-6]=0;
											output.r[midy-8][midx-7]=val;
											output.g[midy-8][midx-7]=0;
											output.b[midy-8][midx-7]=0;
											output.r[midy-8][midx-8]=val;
											output.g[midy-8][midx-8]=0;
											output.b[midy-8][midx-8]=0;
											output.r[midy-9][midx-2]=val;
											output.g[midy-9][midx-2]=0;
											output.b[midy-9][midx-2]=0;
											output.r[midy-9][midx-3]=val;
											output.g[midy-9][midx-3]=0;
											output.b[midy-9][midx-3]=0;
											output.r[midy-9][midx-4]=val;
											output.g[midy-9][midx-4]=0;
											output.b[midy-9][midx-4]=0;
											output.r[midy-9][midx-5]=val;
											output.g[midy-9][midx-5]=0;
											output.b[midy-9][midx-5]=0;
											output.r[midy-9][midx-7]=val;
											output.g[midy-9][midx-7]=0;
											output.b[midy-9][midx-7]=0;
											output.r[midy-9][midx-8]=val;
											output.g[midy-9][midx-8]=0;
											output.b[midy-9][midx-8]=0;
											output.r[midy-9][midx-9]=val;
											output.g[midy-9][midx-9]=0;
											output.b[midy-9][midx-9]=0;
											output.r[midy-10][midx-2]=val;
											output.g[midy-10][midx-2]=0;
											output.b[midy-10][midx-2]=0;
											output.r[midy-10][midx-3]=val;
											output.g[midy-10][midx-3]=0;
											output.b[midy-10][midx-3]=0;
											output.r[midy-10][midx-4]=val;
											output.g[midy-10][midx-4]=0;
											output.b[midy-10][midx-4]=0;
											output.r[midy-10][midx-8]=val;
											output.g[midy-10][midx-8]=0;
											output.b[midy-10][midx-8]=0;
											output.r[midy-10][midx-9]=val;
											output.g[midy-10][midx-9]=0;
											output.b[midy-10][midx-9]=0;
											output.r[midy-10][midx-10]=val;
											output.g[midy-10][midx-10]=0;
											output.b[midy-10][midx-10]=0;
											output.r[midy-11][midx-2]=val;
											output.g[midy-11][midx-2]=0;
											output.b[midy-11][midx-2]=0;
											output.r[midy-11][midx-3]=val;
											output.g[midy-11][midx-3]=0;
											output.b[midy-11][midx-3]=0;
											output.r[midy-11][midx-4]=val;
											output.g[midy-11][midx-4]=0;
											output.b[midy-11][midx-4]=0;
											output.r[midy-11][midx-8]=val;
											output.g[midy-11][midx-8]=0;
											output.b[midy-11][midx-8]=0;
											output.r[midy-11][midx-9]=val;
											output.g[midy-11][midx-9]=0;
											output.b[midy-11][midx-9]=0;
											output.r[midy-11][midx-10]=val;
											output.g[midy-11][midx-10]=0;
											output.b[midy-11][midx-10]=0;
											output.r[midy-12][midx-2]=val;
											output.g[midy-12][midx-2]=0;
											output.b[midy-12][midx-2]=0;
											output.r[midy-12][midx-3]=val;
											output.g[midy-12][midx-3]=0;
											output.b[midy-12][midx-3]=0;
											output.r[midy-12][midx-4]=val;
											output.g[midy-12][midx-4]=0;
											output.b[midy-12][midx-4]=0;
											output.r[midy-12][midx-8]=val;
											output.g[midy-12][midx-8]=0;
											output.b[midy-12][midx-8]=0;
											output.r[midy-12][midx-9]=val;
											output.g[midy-12][midx-9]=0;
											output.b[midy-12][midx-9]=0;
											output.r[midy-12][midx-10]=val;
											output.g[midy-12][midx-10]=0;
											output.b[midy-12][midx-10]=0;
											output.r[midy-13][midx-2]=val;
											output.g[midy-13][midx-2]=0;
											output.b[midy-13][midx-2]=0;
											output.r[midy-13][midx-3]=val;
											output.g[midy-13][midx-3]=0;
											output.b[midy-13][midx-3]=0;
											output.r[midy-13][midx-4]=val;
											output.g[midy-13][midx-4]=0;
											output.b[midy-13][midx-4]=0;
											output.r[midy-13][midx-8]=val;
											output.g[midy-13][midx-8]=0;
											output.b[midy-13][midx-8]=0;
											output.r[midy-13][midx-9]=val;
											output.g[midy-13][midx-9]=0;
											output.b[midy-13][midx-9]=0;
											output.r[midy-13][midx-10]=val;
											output.g[midy-13][midx-10]=0;
											output.b[midy-13][midx-10]=0;
											output.r[midy-14][midx-3]=val;
											output.g[midy-14][midx-3]=0;
											output.b[midy-14][midx-3]=0;
											output.r[midy-14][midx-4]=val;
											output.g[midy-14][midx-4]=0;
											output.b[midy-14][midx-4]=0;
											output.r[midy-14][midx-5]=val;
											output.g[midy-14][midx-5]=0;
											output.b[midy-14][midx-5]=0;
											output.r[midy-14][midx-7]=val;
											output.g[midy-14][midx-7]=0;
											output.b[midy-14][midx-7]=0;
											output.r[midy-14][midx-8]=val;
											output.g[midy-14][midx-8]=0;
											output.b[midy-14][midx-8]=0;
											output.r[midy-14][midx-9]=val;
											output.g[midy-14][midx-9]=0;
											output.b[midy-14][midx-9]=0;
											output.r[midy-15][midx-4]=val;
											output.g[midy-15][midx-4]=0;
											output.b[midy-15][midx-4]=0;
											output.r[midy-15][midx-5]=val;
											output.g[midy-15][midx-5]=0;
											output.b[midy-15][midx-5]=0;
											output.r[midy-15][midx-6]=val;
											output.g[midy-15][midx-6]=0;
											output.b[midy-15][midx-6]=0;
											output.r[midy-15][midx-7]=val;
											output.g[midy-15][midx-7]=0;
											output.b[midy-15][midx-7]=0;
											output.r[midy-15][midx-8]=val;
											output.g[midy-15][midx-8]=0;
											output.b[midy-15][midx-8]=0;

										}
									}

							}

						}


					}

					// Normalize
					for(int i=0; i<output.ydim; i++)
						for(int j=0; j<output.xdim; j++){
							if(output.r[i][j]<0)
								output.r[i][j]=0;
							if(output.g[i][j]<0)
								output.g[i][j]=0;
							if(output.b[i][j]<0)
								output.b[i][j]=0;

							if(output.r[i][j]>255)
								output.r[i][j]=255;
							if(output.g[i][j]>255)
								output.g[i][j]=255;
							if(output.b[i][j]>255)
								output.b[i][j]=255;
						}

					m = str2.size();

					str2.erase(m-4);
					str.append("_");
					str.append(str2);
					str.append(".ppm");

					outputFile.append("\\");
					outputFile.append(str);

					strcpy_s(output.name, outputFile.c_str());
					OutputPpm(&output);
					if(flag==0)
						break;

		default: break;

	}

}



#endif
